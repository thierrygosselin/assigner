% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{extract_matching_args}
\alias{extract_matching_args}
\title{Extract arguments matching a function's formals}
\usage{
extract_matching_args(from.env, to.fn, .evaluate = TRUE, .exclude = NULL)
}
\arguments{
\item{from.env}{The environment from which to extract arguments (typically `environment()` or `rlang::caller_env()`).}

\item{to.fn}{The target function whose formal arguments will be matched.}

\item{.evaluate}{Logical, whether to force evaluation (default: TRUE).}

\item{.exclude}{Optional character vector of argument names to exclude.}
}
\value{
A named list of matched and evaluated arguments (excluding `.exclude`).
}
\description{
Extracts named arguments from an environment (e.g., the calling environment)
that match the formal arguments of a target function.

Useful when forwarding arguments from a parent function to a subfunction
without manually repeating each parameter.
}
\examples{
\dontrun{
args.for.fst <- extract_matching_args(from.env = environment(), to.fn = assigner::compute_fst)
result <- rlang::exec(assigner::compute_fst, x = my_data, !!!args.for.fst)
}

}
\keyword{internal}
