% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assignment_ngs.R
\name{assignment_ngs}
\alias{assignment_ngs}
\title{Assignment analysis tailored for RADseq data}
\usage{
assignment_ngs(data, assignment.analysis = c("gsim_sim", "adegenet"),
  sampling.method = c("ranked", "random"),
  adegenet.dapc.opt = "optim.a.score", adegenet.n.rep = 30,
  adegenet.training = 0.9, thl = 1, iteration.method = 10,
  subsample = NULL, iteration.subsample = 1, marker.number = "all",
  strata = NULL, pop.levels = NULL, verbose = FALSE, folder = NULL,
  filename = "assignment_data.txt", keep.gsi.files = FALSE,
  random.seed = NULL, parallel.core = parallel::detectCores() - 1, ...)
}
\arguments{
\item{data}{12 options for input: VCFs (SNPs or Haplotypes,
to make the vcf population ready),
plink, stacks haplotype file, genind (library(adegenet)),
genlight (library(adegenet)), gtypes (library(strataG)), genepop, DArT,
and a data frame in long/tidy or wide format. To verify that radiator detect
your file format use \code{\link{detect_genomic_format}} (see example below).
Documented in \strong{Input genomic datasets} of \code{\link{tidy_genomic_data}}.}

\item{assignment.analysis}{(character) Assignment analysis conducted with 
\code{assignment.analysis = "gsi_sim"} or 
\code{assignment.analysis = "adegenet"}.}

\item{sampling.method}{(character) Should the markers be randomly selected
\code{sampling.method == "random"} for a classic Leave-One-Out (LOO) assignment or
chosen based on ranked Fst \code{sampling.method == "ranked"}, used in a
Training-Holdout-Leave One Out (thl) assignment. 
\emph{See details}.}

\item{adegenet.dapc.opt}{(optional, character) \strong{Argument available only when 
using:
\code{assignment.analysis = "adegenet"} with
\code{sampling.method == "random"}}.

The assignment using dapc can use the optimized alpha score 
\code{adegenet.dapc.opt == "optim.a.score"} or 
cross-validation \code{adegenet.dapc.opt == "xval"}
for stability of group membership probabilities. 
For fine tuning the trade-off between power of discrimination and over-fitting.
See \pkg{adegenet} documentation for more details.
\code{adegenet.dapc.opt == "xval"} doesn't work with missing data, so it's 
only available with \strong{imputed data}.
With non imputed data or the default: \code{adegenet.dapc.opt == "optim.a.score"}.}

\item{adegenet.n.rep}{(optional, integer) 
When \code{adegenet.dapc.opt == "xval"}, the number of replicates to be 
carried out at each level of PC retention. 
Default: \code{adegenet.n.rep = 30}.
See \pkg{adegenet} documentation for more details.}

\item{adegenet.training}{(optional, numeric) 
When \code{adegenet.dapc.opt == "xval"}, the proportion of data (individuals) 
to be used for the training set.
Default: \code{adegenet.training = 0.9}, if all groups have >= 10 members. 
Otherwise, training.set scales automatically to the largest proportion 
that still ensures all groups will be present in both training 
and validation sets.
See \pkg{adegenet} documentation for more details.}

\item{thl}{(character, integer, proportion) For \code{sampling.method = "ranked"} only.
Default \code{thl = 1}, 1 individual sample is used as holdout. This individual is not
participating in the markers ranking. For each marker number,
the analysis will be repeated with all the indiviuals in the data set
(e.g. 500 individuals, 500 times 500, 1000, 2000 markers).
If a proportion is used e.g. \code{thl = 0.15}, 15 percent of individuals in each
populations are chosen randomly as holdout individuals.
With \code{thl = "all"} all individuals are used for ranking (not good) and
the argument \code{iteration.method = 1} is set by default.
For the other thl values, you can create different holdout individuals lists
with the \code{iteration.method} argument below (bootstrap).}

\item{iteration.method}{(integer) With random marker selection the iterations argument =
the number of iterations to repeat marker resampling. 
Default: \code{iteration.method = 10}.
With \code{marker.number = c(500, 1000)} and default iterations setting,
500 markers will be randomly chosen 10 times and 1000 markers will be randomly
chosen 10 times.

\strong{Notes:} If all the markers are used, with \code{marker.number = "all"}
or in a series of marker number groupings \code{marker.number = c(200, 500, "all")}, 
the number of iteration is automatically set to 1. The remaining groupings
are unaffected.

For the ranked method, using \code{thl = 1}, the analysis
will be repeated for each individuals in the data set for every
\code{marker.number} selected. With a proportion argument \code{thl = 0.15},
15 percent of individuals in each populations are chosen randomly as holdout
individuals and this process is reapeated the number of times chosen by the
\code{iteration.method} value.}

\item{subsample}{(Integer or Character, optional) 
With \code{subsample = 36}, 36 individuals in each populations are chosen
randomly to represent the dataset. This integer as to be smaller than the
population with min sample size, if higher, the minimum sample size found 
in the data will be used as default. In doubt, use \code{subsample = "min"},
the function will use the smallest population sample size found in the data.
Default: \code{subsample = NULL} (no subsampling).}

\item{iteration.subsample}{(Integer) The number of iterations to repeat 
subsampling.
With \code{subsample = 20} and \code{iteration.subsample = 10},
20 individuals/populations will be randomly chosen 10 times.
Default: \code{iteration.subsample = 1}.}

\item{marker.number}{(Integer or string of number or "all") Calculations with
fixed or subsample of your markers.
e.g. To test 500, 1000, 2000 and all  the markers:
\code{marker.number = c(500, 1000, 2000, "all")}.
To use only 500 makers \code{marker.number = 500}.
Default = \code{marker.number = "all"}.}

\item{strata}{(optional/required) Optional for file format with population 
grouping integrated (e.g. vcf is not population-wise and requires a strata file).

The strata file is a tab delimited file with 2 columns with header:
\code{INDIVIDUALS} and \code{STRATA}.
The strata column is cleaned of a white spaces that interfere with some
packages or codes: space is changed to an underscore \code{_}.
Default: \code{strata = NULL}.}

\item{pop.levels}{(optional) Documented in 
\pkg{radiator} \code{\link[radiator]{read_strata}}.
Default: \code{pop.levels = NULL}.}

\item{verbose}{(optional, logical) When \code{verbose = TRUE}
the function is a little more chatty during execution.
Default: \code{verbose = TRUE}.}

\item{folder}{(optional) The name of the folder created in the working 
directory to save the files/results. Default: \code{folder = NULL} will create
the folder for you with data and time.}

\item{filename}{(optional) The name of the file written to the directory.
Use the extension ".txt" at the end. 
Several info will be appended to the name of the file.
Default \code{assignment_data.txt}.}

\item{keep.gsi.files}{(logical, optional) With the default, 
the intermediate input and output gsi_sim files will be deleted from the 
directory when finished processing. I you decide to keep the files, with 
\code{keep.gsi.files = TRUE}, remember to allocate a large chunk of the disk 
space for the analysis.
Default: \code{keep.gsi.files = FALSE}}

\item{random.seed}{(integer, optional) For reproducibility, set an integer
that will be used inside function that requires randomness. With default,
a random number is generated and printed in the appropriate output.
Default: \code{random.seed = NULL}.}

\item{parallel.core}{(optional) The number of core used for parallel
execution during import.
Default: \code{parallel.core = parallel::detectCores() - 1}.}

\item{...}{(optional) To pass further argument for fine-tuning the 
function (filters). See details.}
}
\value{
Depending on arguments selected, several files are written to the your
working directory or \code{folder}
The output in your global environment is a list. To view the assignment results
\code{$assignment} to view the ggplot2 figure \code{$plot.assignment}. 
See example below.
}
\description{
The arguments in the \code{assignment_ngs} function were tailored for the
reality of GBS/RADseq data for assignment analysis while
maintaining a reproducible workflow. Assignment are conducted using
\href{https://github.com/eriqande/gsi_sim}{gsi_sim} or 
\code{\link[adegenet]{adegenet}}. 

\itemize{
  \item \strong{Input file:} various file format are supported (see \code{data} argument below)
  \item \strong{Filters:} genotypes, markers, individuals and populations can be 
  filtered and/or selected in several ways using blacklist,
  whitelist and other arguments (see details).
  \item \strong{Cross-Validations:} Markers can be randomly selected for a classic LOO (Leave-One-Out)
  assignment or chosen based on ranked Fst for a thl
  (Training, Holdout, Leave-one-out) assignment analysis
  \item \strong{Assignment analysis:} conducted in 
  \href{https://github.com/eriqande/gsi_sim}{gsi_sim}, a tool 
  for doing and simulating genetic stock identification and 
  developed by Eric C. Anderson, or 
\href{https://github.com/thibautjombart/adegenet}{adegenet}, 
an R package developed by Thibaul Jombart
  \item \strong{Parallel:} The assignment can be conduncted on multiple CPUs
  \item \strong{Results:} Assignment results in raw or processed tables and figures
}
}
\details{
\strong{Input files:} see \pkg{radiator} \code{\link[radiator]{tidy_genomic_data}}
for detailed information about supported file format.

\strong{Available filters:}

Further arguments can be passed via the \emph{dots-dots-dots}: 
\itemize{
\item whitelist.markers
}
For argument documentation see \pkg{radiator} \code{\link[radiator]{tidy_genomic_data}}.


\strong{THL, Ranking and Fst:}

With \code{sampling.method = "ranked"}, the markers are first 
arranged by \emph{decreasing} values of Fst.
The Fst is computed with \code{\link{fst_WC84}} function, that uses a fast 
implementation of Weir and Cockerham 1984 Fst/Theta equations.
}
\note{
\code{assignment_ngs} assumes that the command line version of 
\href{https://github.com/eriqande/gsi_sim}{gsi_sim} 
is properly installed into \code{file.path(system.file(package = "assigner"), "bin", "gsi_sim")}.
Things are set up so that it will try running gsi_sim, and if it does not find it, the 
program will throw an error and ask the user to run \code{\link{install_gsi_sim}}
which will do its best to put a usable copy of gsi_sim where it is needed. 
To do so, you must be connected to the internet. If that doesn't work, you will
need to compile the program yourself, or get it yourself, and the manually copy
it to \code{file.path(system.file(package = "assigner"), "bin", "gsi_sim")}.
To compile \href{https://github.com/eriqande/gsi_sim}{gsi_sim}, follow the 
instruction here: \url{https://github.com/eriqande/gsi_sim}.
}
\examples{
\dontrun{
assignment.treefrog <- assignment_ngs(
    data = "batch_1.vcf", strata = "strata.treefrog.tsv",
    assignment.analysis = "gsi_sim",
     marker.number = c(500, 5000, "all"),
     sampling.method = "ranked", thl = 0.3,
     subsample = 25, iteration.subsample = 10)

Since the 'folder' argument is missing, it will be created automatically
inside your working directory.

To create a dataframe with the assignment results: 
assignment <- assignment.treefrog$assignment.

To plot the assignment using ggplot2 and facet 
(with subsample by current pop):
assignment.treefrog$plot.assignment + ggplot2::facet_grid(SUBSAMPLE~CURRENT).

To view the full range of y values = Assignment success(\%): 
assignment.treefrog$plot.assignment + 
ggplot2::facet_grid(SUBSAMPLE~CURRENT) + 
ggplot2::scale_y_continuous(limits = c(0,100)) 
To save the plot:
ggplot2::ggsave("assignment.pdf", height = 35, width = 60,dpi = 600,
units = "cm", useDingbats = FALSE)

# If you want to remove underscore in population names that contained white space:
facet_names <- c(
`some_pop` = "Some POP", 
`some_other_pop` = "This is what I want", 
`OVERALL` = "Overall")

# use the labeller in the facet_grid or facet_wrap call:
assignment.treefrog$plot.assignment + 
ggplot2::facet_grid(~CURRENT, ggplot2::labeller = ggplot2::as_labeller(facet_names)) + 
ggplot2::scale_y_continuous(limits = c(0,100)) 
figure # this one should be ok with custom naming in the facets.
}
}
\references{
Anderson, Eric C., Robin S. Waples, and Steven T. Kalinowski. (2008)
An improved method for predicting the accuracy of genetic stock identification.
Canadian Journal of Fisheries and Aquatic Sciences 65, 7:1475-1486.

Anderson, E. C. (2010) Assessing the power of informative subsets of
loci for population assignment: standard methods are upwardly biased.
Molecular ecology resources 10, 4:701-710.

Weir BS, Cockerham CC (1984) Estimating F-Statistics for the
Analysis of Population Structure. Evolution, 38, 1358–1370.

Jombart T, Devillard S, Balloux F. 
Discriminant analysis of principal components: a new method for the analysis 
of genetically structured populations. 
BMC Genet. 2010:11: 94. doi:10.1186/1471-2156-11-94

Jombart T, Ahmed I. adegenet 1.3-1: new tools for the analysis 
of genome-wide SNP data. 
Bioinformatics. 2011:27: 3070–3071. doi:10.1093/bioinformatics/btr521
}
\seealso{
\href{https://github.com/eriqande/gsi_sim}{gsi_sim} and 
\href{https://github.com/eriqande/rubias}{rubias}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com} and Eric C. Anderson
}
