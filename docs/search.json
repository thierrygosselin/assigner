[{"path":[]},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/FEATURES.html","id":"independent-modules","dir":"","previous_headings":"","what":"Independent modules","title":"Assigner features","text":"Fst: assigner provides one fastest implementation Weir Cockerham (1984) Fst/Theta Nei’s fst (1987). overall pairwise Fst can estimated confidence intervals based bootstrap markers (resampling replacement). Dlr: Compute genotype likelihood ratio distance metric (Paetkau’s et al. 1997, 2004).","code":""},{"path":"https://thierrygosselin.github.io/assigner/FEATURES.html","id":"parallel-computation-and-cloud-computing","dir":"","previous_headings":"","what":"Parallel computation and Cloud Computing","title":"Assigner features","text":"function assigner designed fast possible. Using computer 16GB RAM recommended. CPU Memory comes faster computation time. decide keep intermediate files assignment analysis, need large external drive (disk space cheap). Solid State Drive thunderbolt cables provide fast input/output. disk space computer power issue, cloud computing DigitalOcean, Google Cloud Compute Engine Amazon Elastic Cloud Compute cheap can used easily. tutorial pipeline along Amazon Machine Image (AMI) available tutorial-workflow. AMI preloaded gsi_sim required R packages. Following steps, can RStudio server running used web browser! Amazon image can imported Google Cloud Compute Engine start new compute engine virtual machine.","code":""},{"path":"https://thierrygosselin.github.io/assigner/FEATURES.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Assigner features","text":"Anderson EC, Waples RS, Kalinowski ST (2008) improved method predicting accuracy genetic stock identification. Canadian Journal Fisheries Aquatic Sciences, 65, 1475–1486. Anderson EC (2010) Assessing power informative subsets loci population assignment: standard methods upwardly biased. Molecular Ecology Resources, 10, 701–710. Catchen JM, Amores , Hohenlohe PA et al. (2011) Stacks: Building Genotyping Loci De Novo Short-Read Sequences. G3, 1, 171–182. Catchen JM, Hohenlohe PA, Bassham S, Amores , Cresko WA (2013) Stacks: analysis tool set population genomics. Molecular Ecology, 22, 3124–3140. Danecek P, Auton , Abecasis G et al. (2011) variant call format VCFtools. Bioinformatics, 27, 2156–2158. Foll M, Gaggiotti O (2008) Genome-Scan Method Identify Selected Loci Appropriate Dominant Codominant Markers: Bayesian Perspective. Genetics, 180, 977–993. Goudet J.hierfstat, package r compute test hierarchical F-statistics. Molecular Ecology Notes.2005; 5: 184-186. doi:10.1111/j.1471-8286.2004.00828.x Ishwaran H. Kogalur U.B. (2015). Random Forests Survival, Regression Classification (RF-SRC), R package version 1.6.1. Jombart T (2008) adegenet: R package multivariate analysis genetic markers. Bioinformatics, 24, 1403–1405. Jombart T, Ahmed (2011) adegenet 1.3-1: new tools analysis genome-wide SNP data. Bioinformatics, 27, 3070–3071. Kavakiotis , Triantafyllidis , Ntelidou D et al. (2015) TRES: Identification Discriminatory Informative SNPs Population Genomic Data. Journal Heredity, 106, 672–676. Meirmans PG, Van Tienderen PH (2004) genotype genodive: two programs analysis genetic diversity asexual organisms. Molecular Ecology Notes, 4, 792-794. Nei M. (1987) Molecular Evolutionary Genetics. Columbia University Press. Paetkau D, Slade R, Burden M, Estoup (2004) Genetic assignment methods direct, real-time estimation migration rate: simulation-based exploration accuracy power. Molecular Ecology, 13, 55-65. Paetkau D, Waits LP, Clarkson PL, Craighead L, Strobeck C (1997) empirical evaluation genetic distance statistics using microsatellite data bear (Ursidae) populations. Genetics, 147, 1943-1957. Purcell S, Neale B, Todd-Brown K, Thomas L, Ferreira MAR, Bender D, et al.  PLINK: tool set whole-genome association population-based linkage analyses. American Journal Human Genetics. 2007; 81: 559–575. doi:10.1086/519795 Raymond M. & Rousset F, (1995). GENEPOP (version 1.2): population genetics software exact tests ecumenicism. J. Heredity, 86:248-249 Rosenberg NA, Li LM, Ward R, Pritchard JK (2003) Informativeness genetic markers inference ancestry. American Journal Human Genetics, 73, 1402–1422. Rousset F. genepop’007: complete re-implementation genepop software Windows Linux. Molecular Ecology Resources. 2008, 8: 103-106. doi:10.1111/j.1471-8286.2007.01931.x Shriver MD, Smith MW, Jin L et al. (1997) Ethnic-affiliation estimation use population-specific DNA markers. American Journal Human Genetics, 60, 957. Weir BS, Cockerham CC (1984) Estimating F-Statistics Analysis Population Structure. Evolution, 38, 1358–1370. Whitlock MC, Lotterhos KE (2015) Reliable Detection Loci Responsible Local Adaptation: Inference Null Model Trimming Distribution FST*. American Naturalist, S000–S000. Zheng X, Levine D, Shen J, Gogarten SM, Laurie C, Weir BS. high-performance computing toolset relatedness principal component analysis SNP data. Bioinformatics. 2012;28: 3326-3328. doi:10.1093/bioinformatics/bts606","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://thierrygosselin.github.io/assigner/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 NULL  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. assigner Copyright (C) 2019 NULL This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://thierrygosselin.github.io/assigner/articles/assignment.whitelists.html","id":"prepare-working-environment","dir":"Articles","previous_headings":"","what":"Prepare working environment","title":"Running assigner::assignment_ngs with several whitelists","text":"","code":"rm(list = ls()) if (!require(\"pak\")) install.packages(\"pak\") pak::pkg_install(\"thierrygosselin/assigner\") library(assigner) assigner::install_gsi_sim(fromSource = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/articles/assignment.whitelists.html","id":"prepare-whitelists","dir":"Articles","previous_headings":"","what":"Prepare whitelists","title":"Running assigner::assignment_ngs with several whitelists","text":"Gather whitelist single folder Get list file string command :","code":"all.whitelists <- list.files(path = \"~/Desktop/whitelists_salmon\", pattern = \"whitelist\") all.whitelists # to see if the whitelists are all there"},{"path":"https://thierrygosselin.github.io/assigner/articles/assignment.whitelists.html","id":"create-a-function-to-run-your-assignment","dir":"Articles","previous_headings":"","what":"Create a function to run your assignment","title":"Running assigner::assignment_ngs with several whitelists","text":"goal argument need selected argument change whitelist multiple arguments changing time, simplicity, let’s start just one","code":"whitelists_assigner <- function(x) {   res <- assigner::assignment_ngs(     data = \"subset_melville_salmon.tsv\", #change for what you want     whitelist.markers = x, # don't change this one,     assignment.analysis = \"adegenet\", #change for what you want     common.markers = TRUE,#change for what you want     marker.number = \"all\",# I think you get the idea...     pop.levels = c(1,2,3,4,5,6,7,8,9,10,11),     sampling.method = \"random\",     iteration.method = 1,     keep.gsi.files = FALSE   ) }"},{"path":"https://thierrygosselin.github.io/assigner/articles/assignment.whitelists.html","id":"run-the-assignment","dir":"Articles","previous_headings":"","what":"Run the assignment","title":"Running assigner::assignment_ngs with several whitelists","text":"trick map whitelists new function whitelists_assigner results list easily managed R purrr package awesome , ’s similar lapply function, better. access MAC LINUX cluster, just replace purrr::map function parallel::mclapply","code":"salmon.assignment.res <- purrr::map( .x = all.whitelists, # your whitelist created above .f = whitelists_assigner # your new function )"},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"learn run function assigner::fst_WC84 compute pairwise overall Weir Cockerham (1984) Fst estimates build confidence intervals visualize estimates data frame matrices learn integrate function package, e.g. build phylogenetic tree make Louis Bernatchez happy !","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"special-concerns-for-genome-wide-estimate-and-filtering-bias","dir":"Articles","previous_headings":"","what":"Special concerns for genome-wide estimate and filtering bias","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"computation, function first starts keeping polymorphic markers common populations. project involves > 2 populations evolved neutral processes (e.g. genetic drift) natural selection, filtering keep markers common populations drastically reduce number markers, consequently genome coverage estimate. Strategically, reduce threshold number populations required keep marker (e.g. use minimum 2 populations genotyped markers keep ). easily tested radiator::filter_common_markers stacks population module. overall fst fis estimates reduce genome-wide coverage, computation conducted shared markers accross populations. However, pairwise comparisons, markers tallied automatically pair. usually results legitimate markers (.e. less filtering bias) used computation, providing better genome-wide estimates pair.","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"preparation","dir":"Articles","previous_headings":"Workflow","what":"Preparation","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"Clean desk remove clutter global environment Required libraries Get data:","code":"rm(list=ls()) if (!require(\"pak\")) install.packages(\"pak\") pak::pkg_install(\"thierrygosselin/assigner\") library(assigner) data.fst <- readr::read_tsv(file = \"https://raw.githubusercontent.com/thierrygosselin/package_data/master/assigner_data_fst.tsv.gz\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"fst-calculations","dir":"Articles","previous_headings":"Workflow","what":"Fst calculations","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"assigner::fst_WC84 first run: overall pairwise, without boostrap (.e. confidence intervals). Get function documentation : ??assigner::fst_WC84.","code":"fst <- assigner::fst_WC84(     data = data.fst,      pop.levels = c(\"pop1\", \"pop2\", \"pop3\", \"pop4\", \"pop5\", \"pop6\", \"pop7\", \"pop8\", \"pop9\", \"pop10\", \"pop11\"),     pairwise = TRUE,     filename = \"testing_fst\", #will trigger the function to write the results in directory as well     verbose = TRUE )"},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"results","dir":"Articles","previous_headings":"Workflow","what":"Results","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"10 sec max get Fst (overall) value 0.05 view content fst: $sigma.loc: variance components per locus: lsiga: among populations, lsigb: among individuals within populations, lsigw: within individuals. $fst.markers: fst markers $fst.ranked: fst ranked $fst.overall: mean fst overall markers number markers $fis.markers: fis markers $fis.overall: mean fis overall markers number markers $fst.plot: histogram overall Fst per markers $pairwise.fst: pairwise fst long/tidy data frame number markers per pairwise comparison $pairwise.fst.upper.matrix: pairwise fst upper triangle matrix $pairwise.fst.full.matrix: pairwise fst matrix (duplicated upper lower triangle) $pairwise.fst.ci.matrix: matrix pairwise fst upper triangle confidence intervals lower triangle. view pairwise Fst values tibble 4 columns: first 10 parwise comparisons df N_MARKERS: number markers used pairs calculate Fst. matrix fst values: try get pairwise.fst.ci.matrix: let’s make another run fst_WC84, time ask confidence intervals heatmap: Try get matrix fst ci: handy table publication, create new object pairwise.fst.ci.df: even better, use heatmap Fst CI values…:","code":"names(fst) df <- fst$pairwise.fst # to see as a tibble: fst.matrix <- tibble::as_tibble(fst$pairwise.fst.full.matrix, rownames = \"POP\") # to keep matrix: fst.matrix <- fst$pairwise.fst.full.matrix fst$pairwise.fst.ci.matrix # you will get this: [1] \"confidence intervals not selected\" fst.ci <- fst_WC84(data = data.fst,      pop.levels = c(\"pop1\", \"pop2\", \"pop3\", \"pop4\", \"pop5\", \"pop6\", \"pop7\", \"pop8\", \"pop9\", \"pop10\", \"pop11\"),     pairwise = TRUE,     ci = TRUE,      iteration.ci = 100,     quantiles.ci = c(0.025, 0.975),     parallel.core = 12,     heatmap.fst = TRUE,     filename = \"testing_fst\",     verbose = TRUE ) `fst.ci$pairwise.fst` is the tibble with the Fst values and now with the confidence intervals. fst.ci$pairwise.fst.ci.matrix pairwise.fst.ci.df <- tibble::as_tibble(fst.ci$pairwise.fst.ci.matrix, rownames = \"POP\") # if you have numeric pop_id identifier you might have to do this to get proper column names: colnames(pairwise.fst.ci.df) <- colnames(fst.ci$pairwise.fst.ci.matrix) # to save: readr::write_tsv(x = pairwise.fst.ci.df, path = \"pairwise.fst.ci.df.tsv\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"phylogenetic-tree","dir":"Articles","previous_headings":"Workflow","what":"Phylogenetic tree","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"next steps, need full distance matrix created step 10. Neighbor joining tree: UPGMA tree: build tree need install Several vignettes available get know ggtree Build basic tree figure:","code":"# build the tree: require(ape) tree <- ape::nj(X = fst.matrix) # fst.matrix as a matrix # for annotating bootstraps values on the tree: bootstrap.value <- ape::boot.phylo(     phy = tree,      x = fst.matrix,      FUN = function(x) ape::nj(x),      block = 1,      B = 10000,      trees = FALSE,      rooted = FALSE     )  # to get percentage values bootstrap.value <- round((bootstrap.value/10000)*100, 0) bootstrap.value # to include in the tree tree$node.label <- bootstrap.value require(stats) tree <- ape::as.phylo(stats::hclust(stats::dist(fst.matrix), method = \"average\")) bootstrap.value <- ape::boot.phylo(phy = tree, x = fst.matrix, FUN = function(xx) ape::as.phylo(stats::hclust(stats::dist(xx), method = \"average\")) , block = 1, B = 10000, trees = FALSE, rooted = TRUE)  bootstrap.value <- round((bootstrap.value/10000)*100, 0) bootstrap.value tree$node.label <- bootstrap.value # get the latest development version of ggtree: if (!require(\"ggtree\")) install_github(\"GuangchuangYu/ggtree\") # If it's not working, use the Bioconductor version: if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\") BiocManager::install(\"ggtree\") require(ggtree) require(ggplot2) tree.figure <- ggplot2::ggplot(tree, ggplot2::aes(x, y), ladderize = TRUE) +      ggtree::geom_tree() +      # geom_tiplab(size = 3, hjust = -0.05, vjust = 0.5)+ # for just the tip label     ggplot2::geom_text(ggplot2::aes(label = label), size = 3, hjust = -0.05, vjust = 0.5) + # for both tips and nodes     ggtree::theme_tree() +      ggplot2::xlim(0, 0.16) # to allocate more space for tip labels (trial/error) tree.figure ggplot2::ggsave(filename = \"assigner.fst.tree.example.pdf\", width = 15, height = 15, dpi = 600, units = \"cm\", useDingbats = FALSE)"},{"path":"https://thierrygosselin.github.io/assigner/articles/fst_confidence_intervals.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Pairwise and overall Fst with confidence intervals + building phylogenetic tree","text":"Please send suggestions bug reports github References Weir BS, Cockerham CC (1984) Estimating F-Statistics Analysis Population Structure. Evolution, 38, 1358–1370. G Yu, D Smith, H Zhu, Y Guan, TTY Lam, ggtree: R package visualization annotation phylogenetic tree different types meta-data. revised.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"get started using assigner","text":"vignette, able learn basics 30 minutes. Assumptions: ’ve read function documentation web ?assigner::assignment_ngs. ’ve read Eric’s paper: Anderson EC (2010) Assessing power informative subsets loci population assignment: standard methods upwardly biased. Molecular Ecology Resources, 10, 701–710. assigner installed. , follow install instructions.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"prepare-your-workspace","dir":"Articles","previous_headings":"","what":"Prepare your workspace","title":"get started using assigner","text":"clean workspace rm(list = ls()) load assigner default, working directory file vignette . change: setwd(\"new path \")","code":"library(assigner)"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"data-1-high-structure","dir":"Articles","previous_headings":"","what":"Data 1: high structure","title":"get started using assigner","text":"exercise, use first dataset included assigner. ’s simulated dataset generated grur. Details dataset available using: ?assigner::data_assigner_sim_01.","code":"data <- data_assigner_sim_01"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"analysis-using-thl-with-gsi_sim","dir":"Articles","previous_headings":"","what":"Analysis using THL with gsi_sim","title":"get started using assigner","text":"analysis uses cross-validation technique called Training, Holdout, Leave-one-(THL): training model conducted 0.8 (80%) samples (per strata/pops) markers ranked based Fst, training samples used generate Fst. holdout samples consist 0.2 20% samples. samples assigned gsi_sim. process taking subsample individuals (holdout training set) train model conduct assigment analysis gsi_sim repeated 5 times (iteration.method = 5). gsi_sim distributed assigner, follow install instruction, mac ’s:","code":"assigner::install_gsi_sim(fromSource = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"no-subsampling","dir":"Articles","previous_headings":"Analysis using THL with gsi_sim","what":"no subsampling","title":"get started using assigner","text":"default, function uses markers CPUs - 1, change last behavior use argument parallel.core. important information ’ll probably want see returned working directory object. much kept object test1, disk space cheap, memory ! Written working directory assignment_analysis_method_ranked_date@time, date@time date time function run: folders files detailed function documentation value returned function. see figure:  default, figure display range data, change behavior see full range y axis:  assignment high populations (points mean values error bar represent SE based 5 iterations). horizontal facet display 1, subsampling samples used, 1 set calculated samples. example show something different. x-axis display number marker used 497. Using dplyr::n_distinct(data$MARKERS) shows dataset contains 500 markers, description dataset suggest, lower number used? default, function keep polymorphic markers common strata/pops (doc). Removing samples original simulated data, low MAC result losing 3 markers. want clean data running function:","code":"test1 <- assigner::assignment_ngs(   data = data,   assignment.analysis = \"gsi_sim\",   markers.sampling = \"ranked\",    thl = 0.2,   iteration.method = 5 ) #>################################################################################ #>########################## assigner::assignment_ngs ############################ #>################################################################################ #>Execution date/time: 20190501@1104 #>Assignment analysis with gsi_sim #>Folder created: assignment_analysis_method_ranked_20190501@1104 #>Calibrating REF/ALT alleles... #>Subsampling: not selected #>Conducting Assignment analysis using Training, Holdout, Leave-one-out #>Using training samples to rank markers based on Fst #>Holdout samples saved in your folder #>Starting parallel computations, for progress monitor activity in folder... #> #>Computation time, overall: 7 sec #>########################## assignment_ngs completed ############################ names(test1) #>[1] \"assignment\"      \"assignment.plot\" # 01_radiator_tidy_genomic: folder # assigner_assignment_ngs_args_20190501@1102.tsv: tibble, file # assignment_1: folder # assignment_2: folder # assignment_3: folder # assignment_4: folder # assignment_5: folder # assignment.plot.pdf: figure # assignment.ranked.results.iterations.raw.tsv: tibble, file # assignment.ranked.results.iterations.summary.tsv: tibble, file # assignment.results.summary.stats.tsv: tibble, file # holdout.individuals.tsv: tibble, file test1$plot.assignment test1$plot.assignment + ggplot2::scale_y_continuous(limits = c(0,100)) data %<>%    radiator::filter_monomorphic(data = .) %>%   radiator::filter_common_markers(data = .) #>Filter monomorphic markers #>Number of individuals / strata / chrom / locus / SNP: #>    Blacklisted: 0 / 0 / NA / NA / 3 #> #>Filter common markers: #>Number of individuals / strata / chrom / locus / SNP: #>    Blacklisted: 0 / 0 / 0 / 0 / 0"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"with-subsampling","dir":"Articles","previous_headings":"Analysis using THL with gsi_sim","what":"with subsampling","title":"get started using assigner","text":"second test, test several marker numbers use subsampling arguments select 30 individuals strata (repeating 3 times). object generated similar analysis witout subsampling. output folder different. subsample folders content output analysis witout subsampling. view figure:  last vertical horizontal facets mean assignment subsampling iterations mean assignment populations, respectively. last plot, lower right corner, corresponding overall average (subsampling strata/pops). number markers doesn’t affect assignment analysis, top 100 markers good using 497 markers. Keep mind rarely case real datasets… dataset high overall Fst value: look membership probabilities adegenet dapc analysis show something similar :","code":"test2 <- assigner::assignment_ngs(   data = data,   assignment.analysis = \"gsi_sim\",   markers.sampling = \"ranked\",    thl = 0.2,   iteration.method = 5,    marker.number = c(100, 200, 300, 400, \"all\"),   subsample = 30,    iteration.subsample = 3 ) #> ################################################################################ #> ########################## assigner::assignment_ngs ############################ #> ################################################################################ #> Execution date/time: 20190501@1158 #> Assignment analysis with gsi_sim #> Folder created: assignment_analysis_method_ranked_20190501@1158 #> Calibrating REF/ALT alleles... #> Subsampling: selected #>     using subsample size of: 30 #>  #> Analyzing subsample: 1 #> Conducting Assignment analysis using Training, Holdout, Leave-one-out #> Using training samples to rank markers based on Fst #> Holdout samples saved in your folder #> Starting parallel computations, for progress monitor activity in folder... #>  #> Analyzing subsample: 2 #> Conducting Assignment analysis using Training, Holdout, Leave-one-out #> Using training samples to rank markers based on Fst #> Holdout samples saved in your folder #> Starting parallel computations, for progress monitor activity in folder... #>  #> Analyzing subsample: 3 #> Conducting Assignment analysis using Training, Holdout, Leave-one-out #> Using training samples to rank markers based on Fst #> Holdout samples saved in your folder #> Starting parallel computations, for progress monitor activity in folder... #>  #> Computation time, overall: 19 sec #> ########################## assignment_ngs completed ############################ # 01_radiator_tidy_genomic: folder # assigner_assignment_ngs_args_20190501@1540.tsv: tibble, file # assignment.plot.pdf: figure # assignment.ranked.results.summary.stats.all.subsamples.tsv: tibble, file # assignment.results.summary.stats.tsv: tibble, file # subsample_1: folder # subsample_2: folder # subsample_3: folder # subsampling_individuals.tsv: tibble, file test2$plot.assignment + ggplot2::scale_y_continuous(limits = c(0,100)) assigner::fst_WC84(data) %$% fst.overall$FST #>[1] 0.39603"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"data-2-low-structure","dir":"Articles","previous_headings":"","what":"Data 2: low structure","title":"get started using assigner","text":"Let’s try analysis, time dataset lower Fst. ’s simulated dataset generated grur. Details dataset available using: ?assigner::data_assigner_sim_02.","code":"data <- data_assigner_sim_02"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"analysis-using-thl-with-gsi_sim-1","dir":"Articles","previous_headings":"","what":"Analysis using THL with gsi_sim","title":"get started using assigner","text":"view figure:  different overall results… assignment analysis species exhibiting overall low structure, using markers , generally, help assingnment (data filtered correctly…) overall Fst value: membership probabilities adegenet dapc analysis:  populations admixed high migration rate used simulations.","code":"test3 <- assigner::assignment_ngs(   data = data,   assignment.analysis = \"gsi_sim\",   markers.sampling = \"ranked\",    thl = 0.2,   iteration.method = 5,    marker.number = c(100, 200, 300, 400, \"all\"),   subsample = 30,    iteration.subsample = 3 ) test3$plot.assignment + ggplot2::scale_y_continuous(limits = c(0,100))  # <img src=\"assignment_thl_test3.png\">: works #![](assignment_thl_test3.png): works #knitr::include_graphics(\"assignment_thl_test3.png\"):works assigner::fst_WC84(data) %$% fst.overall$FST #>[1] 0.001320833"},{"path":"https://thierrygosselin.github.io/assigner/articles/get_started.html","id":"analysis-using-loo-with-gsi_sim","dir":"Articles","previous_headings":"","what":"Analysis using LOO with gsi_sim","title":"get started using assigner","text":"Let’s try using Leave-One-cross-validation technique dataset2. method, potential bias marker selection, can used markers marker.number = \"\" string marker numbers like example , , ’s point using less markers randomly. Leave-One-method means allele frequencies calculated without sample assigned. repeated sample. view figure:  Conclusion: much gain using LOO…","code":"test4 <- assigner::assignment_ngs(   data = data,   assignment.analysis = \"gsi_sim\",   markers.sampling = \"random\",    marker.number = \"all\" ) #> ################################################################################ #> ########################## assigner::assignment_ngs ############################ #> ################################################################################ #> Execution date/time: 20190501@1317 #> Assignment analysis with gsi_sim #> Folder created: assignment_analysis_method_random_20190501@1317 #> Calibrating REF/ALT alleles... #> Subsampling: not selected #> Conducting Assignment analysis with markers selected randomly #> Making a list containing all the markers combinations #> Starting parallel computations, for progress monitor activity in folder... #> Summarizing the assignment analysis results by iterations and marker group #> Compiling results #> ########################## assignment_ngs completed ############################ test4$plot.assignment + ggplot2::scale_y_continuous(limits = c(0,100))"},{"path":"https://thierrygosselin.github.io/assigner/articles/life_cycle.html","id":"life-cycle","dir":"Articles","previous_headings":"","what":"Life cycle","title":"Life cycle","text":"Missing data imputations: now grur imputation missing data requires special attention fall outside scope assigner. Consequently, options longer available. assignment, ’s better imputation quickly imputations defaults. Inside package called grur, users can visualize patterns missingness associated different variables (lanes, chips, sequencers, populations, sample sites, reads/samples, homozygosity, etc). Several Map-independent imputations missing genotypes available: Random Forests (--fly-imputations predictive modeling), Extreme Gradient Tree Boosting, Strawman imputations (~ max/mean/mode: frequently observed, non-missing genotypes used). Imputations can conducted overall samples populations/strata/grouping. radiator::genomic_converter integrated imputation function grur. filter data correctly radiator read imputations tests grur use assigner…","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"macos","dir":"Articles","previous_headings":"","what":"macOS","title":"RADseq Genomics in R","text":"Warning: package management software Homebrew /MacPorts : experience packages point unreliable genomic software installation. might trick software, eventually lose lot time trying figure ’s problem. vignette present brewless options .","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"update-your-os","dir":"Articles","previous_headings":"macOS","what":"Update your OS","title":"RADseq Genomics in R","text":"current version macOS Sequoia 15.1 update","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"get-administrator-and-root-user-access","dir":"Articles","previous_headings":"macOS","what":"Get administrator and root user access","title":"RADseq Genomics in R","text":"Make sure administrator root user access computer .","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"apples-command-line-tools","dir":"Articles","previous_headings":"macOS","what":"Apple’s Command Line Tools","title":"RADseq Genomics in R","text":"Make sure ’s installed…, follow instructions. Although prompt message may bit confusing, just click install. Notes: command line tools already installed ’ll get message xcode-select: error: command line tools already installed, use \"Software Update\" install updates test compiler, can also type: make terminal, ’s installed something similar *** targets specified makefile found.  Stop. Terminology: Reading: understand basic steps install software terminal (configure, make sudo make install steps) ./configure: configure everything installation make: connect libraries source make install (doc) make install: use build (compile) source code create binary files install application system configured using ./configure, usually /usr/local/bin.","code":"xcode-select --install"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"compiler","dir":"Articles","previous_headings":"macOS","what":"Compiler","title":"RADseq Genomics in R","text":"Apple can’t ship GNU Compiler Collection (GCC) OpenMP enabled, similar story Clang compiler used macOS. Consequently, need updateed manually want run software ues parallel computing (like stacks). command fro GCC Clang : change directory downloads download compiler’s binaries uncompress move folders (bin, include, lib, libexec share) compiler computer /usr/local directory. remove downloaded file check version gcc","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"update-gcc","dir":"Articles","previous_headings":"macOS > Compiler","what":"Update GCC","title":"RADseq Genomics in R","text":"Choose binary version number based OS change version accordingly link. Sonoma gcc-14.1-m1-bin.tar.gz","code":"#In Terminal cd Downloads sudo tar -zxvf gcc-14.1-m1-bin.tar.gz -C /usr/local --strip-components=2 sudo rm gcc-14.1-m1-bin.tar.gz gcc -v"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"update-clang","dir":"Articles","previous_headings":"macOS > Compiler","what":"Update Clang","title":"RADseq Genomics in R","text":"want clang compiler OpenMP enabled. latest version 19.1.3.","code":"#In browser make sure you know if your mac as an Intel or Mac chips (M1, M2, etc) https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.3/LLVM-19.1.3-macOS-X64.tar.xz #In Terminal cd Downloads sudo tar -xzvf LLVM-19.1.3-macOS-X64.tar.xz -C/usr/local --strip-components=1 sudo rm LLVM-19.1.3-macOS-X64.tar.xz clang -v"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"path","dir":"Articles","previous_headings":"macOS","what":"PATH","title":"RADseq Genomics in R","text":"shell start script PATH programs** make things little easier talk computer, time open Terminal shell start scripts tells computer look programs. path programs can modified shell start script. computer searching programs, looks path: output look like : /usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin. sometimes, also say: file directory (worries, see ). Use pwd command know exactly ! name shell startup file differs across platforms. Depending OS called ~/.bash_profile sometimes ~/.profile. Filename beginning dot “.” reserved system invisible mac Finder. Find shell start script following command: returns nothing (blank), don’t shell start script. Create one command modify, can use BBEdit open make modify hidden items (using option Show hidden items open file screen). Look free version. Linux, use Vi! Copy/paste line .bash_profile file: modifying shell start script always run command source ~/.bash_profile reload .","code":"$PATH ls -al ~ | grep profile sudo touch $HOME/.bash_profile PATH=\"$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin\""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"useful-tools","dir":"Articles","previous_headings":"macOS","what":"Useful tools","title":"RADseq Genomics in R","text":"useful essential software like mac.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"bbedit","dir":"Articles","previous_headings":"macOS > Useful tools","what":"BBEdit","title":"RADseq Genomics in R","text":"TextWrangler replacement free text editor help save time. installed, go Apple Menu bar -> BBEdit -> Install Command Line","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"pip","dir":"Articles","previous_headings":"macOS > Useful tools","what":"pip","title":"RADseq Genomics in R","text":"Python installer tool highly recommend. install upgrade pip, securely download get-pip.py. Run Terminal: get command found might python installed.","code":"cd ~/Downloads sudo python get-pip.py pip install -U pip   # to upgrade sudo rm -R ~/Downloads/get-pip.py # to remove the downloaded file"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"linux","dir":"Articles","previous_headings":"","what":"Linux","title":"RADseq Genomics in R","text":"Make sure GCC CLANG OpenMP enabled. Several flavors available, check proper link","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"install-r","dir":"Articles","previous_headings":"","what":"Install R","title":"RADseq Genomics in R","text":"install R v4.4.2 “Pile Leaves” released 2024-10-31 download installer follow instructions remove R completely macOS","code":"# for macOS cd Downloads curl -O https://cran.r-project.org/bin/macosx/R-4.4.2.pkg sudo rm -rf /Library/Frameworks/R.framework /Applications/R.app \\ /usr/bin/R /usr/bin/Rscript"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"rstudio","dir":"Articles","previous_headings":"","what":"Rstudio","title":"RADseq Genomics in R","text":"download RStudio, check link download installer OS.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"installing-libraries","dir":"Articles","previous_headings":"","what":"Installing Libraries","title":"RADseq Genomics in R","text":"setup computers clean macOS install. 1. Start devtools tidyverse gsl package required numerous packages can cause headaches… Don’t install source. console print : want install sources package needs compilation? (Yes//cancel). Always aswer unless course know . , install grur assigner packges higher number dependencies, way ’s installing automatically 90% packages need (including radiator).","code":"if (!require(\"devtools\")) install.packages(\"devtools\") # to install install.packages(\"tidyverse\") install.packages(\"gsl\") devtools::install_github(\"thierrygosselin/grur\") devtools::install_github(\"thierrygosselin/assigner\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"makevars-file","dir":"Articles","previous_headings":"","what":"Makevars file","title":"RADseq Genomics in R","text":"packages might compile source use different compiler sometimes useful. need tell R use compilers. might change one package another. Nothing simple, know now… done R’s Makevars file located ~/.R/Makevars. modify create file, fastest way use package usethis (’s installed automatically devtools): Makevars content required:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ FC=/usr/local/bin/gfortran F77=/usr/local/bin/gfortran PKG_LIBS = -fopenmp -lgomp PKG_CFLAGS= -O3 -Wall -pipe -pedantic -std=gnu99 -fopenmp PKG_CXXFLAGS=-fopenmp -std=c++11 CFLAGS= -O3 -Wall -pipe -pedantic -std=gnu99 -fopenmp SHLIB_OPENMP_CFLAGS = -fopenmp SHLIB_OPENMP_CXXFLAGS = -fopenmp SHLIB_OPENMP_FCFLAGS = -fopenmp SHLIB_OPENMP_FFLAGS = -fopenmp # change the nex line according to your computer compiler version (use gcc -v in terminal): FLIBS=-L/usr/local/lib/gcc/x86_64-apple-darwin19/9.2.0/finclude  CFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion CXXFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"Installation_problems","dir":"Articles","previous_headings":"","what":"Errors and installation problems","title":"RADseq Genomics in R","text":"Sometimes ’ll get warnings installing dependencies required x package. solve problem, delete manually problematic package installation folder (mac: /Library/Frameworks/R.framework/Resources/library) Terminal: Using latest version R, RStudio packages recommended. heart start pounding just thought install new R version, look packrat. Look output R console get error message. ’s related one’s packages dependencies, try installing separately attempting reinstall problematic package.","code":"#Warning: cannot remove prior installation of package ‘stringi’ sudo rm -R /Library/Frameworks/R.framework/Resources/library/package_name # Changing 'package_name' to the problematic package. # Reinstall the package."},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error-macos-big-sur-update","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: macOS Big Sur update","title":"RADseq Genomics in R","text":"far, ’ve experience 1 problem upgrading Big Sur, ’s linked adegenet dependency sf package (solution).","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error-checking-whether-the-c-compiler-works-no","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: checking whether the C++ compiler works… no","title":"RADseq Genomics in R","text":"rtying compile software get error: checking whether C++ compiler works... configure: error: C++ compiler create executables Try installing Xcode App Store.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error-https-not-supported","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: “https” not supported","title":"RADseq Genomics in R","text":"get something like: https supported disabled libcurl, install re-install: OpenSSL Required GCC compiler used (TLS backend used). required clang used (securetransport backend used). curl Check latest release curl curl* option type curl -h* next step depends compiler used gcc: Note: macOS 11.0.1 give error configure: error: OpenSSL libs /directories found specified! case, use clang:","code":"#In browser https://www.openssl.org/source/openssl-1.1.1.tar.gz  #In Terminal cd ~/Downloads curl -L https://www.openssl.org/source/openssl-1.1.1.tar.gz | tar xf - cd openssl-1.1.1 ./config make -j12 #change with your number of CPU make test #long sudo make install cd .. sudo rm -R openssl* #Copy/paste in your browser https://curl.haxx.se/download/curl-7.85.0.tar.gz # Terminal cd ~/Downloads tar -zxvf curl-7.85.0.tar.gz cd curl-7.85.0 ./configure --with-ssl # to enable https via OpenSSL and using GCC CC=\"/usr/local/bin/clang\" ./configure --without-ssl #--with-darwinssl # to install via clang make -j12 #change with your number of CPU sudo make install cd .. sudo rm -R curl*"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"linux-related-problem","dir":"Articles","previous_headings":"Errors and installation problems","what":"Linux related problem","title":"RADseq Genomics in R","text":"install problem, problem might computer-specific. e.g. problem related strataG, copula /gsl, try installing libgsl0-dev Terminal (easy now latest RStudio release!):","code":"sudo apt-get install libgsl0-dev"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"Renviron","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: vector memory exhausted","title":"RADseq Genomics in R","text":"errors highlight problems vectors memory similar : vector memory exhausted (limit reached). R, verify file called ~/.Renviron: don’t file: Add .Renviron file located ~/.Renviron: can also use text editor allows see hidden files (files starting . dot).","code":"file.exists(\"~/.Renviron\") require(usethis) usethis::edit_r_environ() R_MAX_VSIZE = 100Gb"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error-during-package-installation","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error during package installation","title":"RADseq Genomics in R","text":"Problem string.h, math.h .h Problem vroom Problem rmetasim example vroom installation: macOS : Makevars needs additional lines make work configuration.","code":"clang++ -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG  -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include\" -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/progress/include\" -I/usr/local/include  -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -fPIC  -Wall -g -O2 -c gen.cc -o gen.o clang++ -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG  -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include\" -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/progress/include\" -I/usr/local/include  -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -fPIC  -Wall -g -O2 -c index_collection.cc -o index_collection.o /usr/local/bin/clang -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG  -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include\" -I\"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/progress/include\" -I/usr/local/include   -fPIC  -I/usr/local/include -c localtime.c -o localtime.o localtime.c:42:10: fatal error: 'string.h' file not found #include <string.h> ^~~~~~~~~~"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error--setmaxglobalsize","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error .setMaxGlobalSize","title":"RADseq Genomics in R","text":"problem previous version pbmcapply ’s interaction future. Solution: restart computer clean desk session: open RStudio update packages Restart R (RStudio > Session > Restart R) Re-install github package generating error Note: heart start pounding just thought update everything computer definitely look packrat: ’s easy use.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error--dynamicclustercall","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error .DynamicClusterCall","title":"RADseq Genomics in R","text":"PC ’re getting error closely related error: Solution: Use parallel.core = 1 function generating error.","code":"# Error in .DynamicClusterCall(cl, length(cl), .fun = function(.proc_idx,  : # One of the nodes produced an error: Can not open file 'FILE PATH'. The process cannot access the file because it # is being used by another process."},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"corrupt-packages","dir":"Articles","previous_headings":"Errors and installation problems","what":"Corrupt packages","title":"RADseq Genomics in R","text":"error usually happens several packages updated: Solution: restart R re-install package generated error","code":"# Error in get0(oNam, envir = ns) : # lazy-load database '/Library/Frameworks/R.framework/Versions/3.5/Resources/library/callr/R/callr.rdb' is corrupt # In addition: Warning message: # In get0(oNam, envir = ns) : internal error -3 in R_decompress1"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"Dynload","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: dyn.load","title":"RADseq Genomics in R","text":"see 2 problems separate solutions. error related adegenet, strataG, assigner packages depends sf package, see solution . error similar : Solution: R, check output command look environment variables: Note output empty, like example , write output. Set new environment variables adding /usr/local/lib/ output : ’s empty: ’s , add end, separated : Long-term solution: Instead using Sys.setenv time similar problem, add environment variables LD_LIBRARY_PATH .Renviron file. discussed another problem .","code":"Error in dyn.load(file, DLLpath = DLLpath, ...) :    unable to load shared object '/home/rstudio/R/x86_64-pc-linux-gnu-library/3.6/units/libs/units.so':   libudunits2.so.0: cannot open shared object file: No such file or directory Calls: <Anonymous> ... asNamespace -> loadNamespace -> library.dynam -> dyn.load Execution halted Sys.getenv(\"LD_LIBRARY_PATH\") # [1]\"\" # in R: Sys.setenv(LD_LIBRARY_PATH=\"/usr/local/lib/\") # For Linux you could use: /usr/local/lib/:/usr/lib64 Sys.setenv(LD_LIBRARY_PATH=\"/usr/local/lib64/R/lib:/lib:/usr/local/lib64:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.222.b10-0.amzn2.0.1.x86_64/jre/lib/amd64/server:/usr/local/lib/:/usr/lib64\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"sfprob","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error related to sf and dyn.load","title":"RADseq Genomics in R","text":"Sometimes problem related dyn.load problems originates specific packages. far, , always linked sf package. problem macOS usually updating os, e.g. Catalina -> Big Sur. solution similar Linux try install adegenet. solutions using Homebrew, ’m fan shortcuts. brewless version execute terminal: udunits sqlite libtiff proj GDAL GEOS Back R/RStudio","code":"cd ~/Downloads curl -L https://artifacts.unidata.ucar.edu/repository/downloads-udunits/current/udunits-2.2.28.tar.gz | tar xf - cd udunits* ./configure && make -j56 && sudo make install cd .. sudo rm -R udunits* cd ~/Downloads curl -L https://www.sqlite.org/2022/sqlite-autoconf-3390400.tar.gz | tar xf - cd sqlite-autoconf* ./configure && make -j56 && sudo make install cd .. sudo rm -R sqlite-autoconf* cd ~/Downloads curl -L https://download.osgeo.org/libtiff/tiff-4.4.0.tar.gz | tar xf - cd tiff* ./configure && make -j56 && sudo make install cd .. sudo rm -R tiff* cd ~/Downloads curl -L  https://download.osgeo.org/proj/proj-9.1.0.tar.gz | tar xf - cd proj* mkdir build cd build cmake .. cmake --build . sudo cmake --build . --target install cd ~/Downloads sudo rm -R proj* # with prior releases, when configure was necessary # ./configure --libdir=/usr/local/lib && make -j56 && sudo make install export LDFLAGS=\"-L/usr/local/lib\" export CPPFLAGS=\"-I/usr/local/include\"  cd ~/Downloads curl -L https://github.com/OSGeo/gdal/releases/download/v3.5.3/gdal-3.5.3.tar.gz | tar xf - cd gdal* mkdir build cd build cmake .. cmake --build . sudo cmake --build . --target install cd ~/Downloads sudo rm -R gdal* # previous install command required #./configure --prefix=/usr/local --libdir=/usr/local/lib --with-proj=/usr/local && make -j56 && sudo make install #time for coffee... cd ~/Downloads git clone https://git.osgeo.org/gitea/geos/geos.git cd geos* mkdir build cd build cmake .. cmake --build . sudo cmake --build . --target install cd ~/Downloads sudo rm -R geos* # previous install command required #./autogen.sh #./configure --libdir=/usr/local/lib && make -j56 && sudo make install install.packages(\"rgeos\", repos=\"http://R-Forge.R-project.org\", type=\"source\") install.packages(\"rgdal\", repos=\"http://R-Forge.R-project.org\", type=\"source\") devtools::install_github(\"r-spatial/sf\", configure.args = \"--with-proj-lib=/usr/local\") install.packages(\"adegenet\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error-http-status-was-404-not-found","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: HTTP status was 404 Not Found","title":"RADseq Genomics in R","text":"error sometimes poping new R upgrade. Try installing problematic package differently. Instead : Try:","code":"BiocManager::install(\"SeqArray\") remotes::install_local(path = \"SeqArray_latest.tar.gz\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error-c-stacks-usage","dir":"Articles","previous_headings":"Errors and installation problems","what":"Error: C stacks usage","title":"RADseq Genomics in R","text":"far, haven’t found cure computer-specific problem. Potential solutions: Make sure enough RAM computer dataset want analyze (16GB bare minimum days small-medium RADseq dataset). Closing windows/app running background somtimes help. Updating latest version R, RStudio libraries. fan upgrading latest version, use Packrat. Follow guidelines prepare computer vignette, start…","code":"Error: C stack usage  7971092 is too close to the limit"},{"path":[]},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"fst-fstcore-data-table","dir":"Articles","previous_headings":"Specific librairies installation","what":"fst & fstcore & data.table","title":"RADseq Genomics in R","text":"Better install compile source enable OpenMP. Install terminal zstd lz4: fstcore, fst data.table requires R Makevars specifications. lines, comment (#) saving installing source:","code":"cd ~/Downloads curl -L https://github.com/lz4/lz4/archive/refs/tags/v1.10.0.tar.gz | tar xf - cd lz4* make  sudo make install cd ..  sudo rm -R lz4* cd ~/Downloads curl -L https://github.com/facebook/zstd/archive/refs/tags/v1.5.6.tar.gz | tar xf - cd zstd* make  sudo make install cd ..  sudo rm -R zstd* usethis::edit_r_makevars() #fstcore fst data.table CC=/usr/local/bin/gcc -fopenmp CXX=/usr/local/bin/g++ -fopenmp CXX11=/usr/local/bin/g++ -fopenmp CXX14=/usr/local/bin/g++ -fopenmp CXX17=/usr/local/bin/g++ -fopenmp CXX1X=/usr/local/bin/g++ -fopenmp CXX98=/usr/local/bin/g++ -fopenmp install.packages(\"fstcore\", type = \"source\") install.packages(\"fst\", type = \"source\") install.packages(\"data.table\", type = \"source\")"},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"download","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Download","title":"RADseq Genomics in R","text":"Download latest github release Allan Strand’s rmetasim","code":"cd ~/Downloads curl -L -O https://github.com/stranda/rmetasim/archive/master.zip unzip master.zip"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"modify-the-number-of-loci-maxloci","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Modify the number of loci: MAXLOCI","title":"RADseq Genomics in R","text":"want use loci simulations (default 10001), need modify rmetasim compiling. text editor, modify const.h file src folder: rmetasim-master/src/const.h. Navigate lane 33 change integer desired maximum number loci. Terminal:","code":"sed -i -e 's/#define MAXLOCI               10001/#define MAXLOCI               20000/g' rmetasim-master/src/const.h"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"Makevars_config","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Makevars configuration","title":"RADseq Genomics in R","text":"rmetasim requires Makevars (~/.R/Makevars file) specifications. lines, comment (#) compiling rmetasim: macOS latest os requires extra lines:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/clang CXX=/usr/local/bin/clang++ CXX1X=/usr/local/bin/clang++ FLIBS=-L/usr/local/lib LDFLAGS=-L/usr/local/lib SHLIB_OPENMP_CFLAGS= -fopenmp SHLIB_OPENMP_FCFLAGS= -fopenmp SHLIB_OPENMP_FFLAGS= -fopenmp SHLIB_OPENMP_CXXFLAGS= -fopenmp CFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk CCFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk CXXFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk CPPFLAGS+=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"compile","dir":"Articles","previous_headings":"Specific librairies installation > rmetasim","what":"Compile","title":"RADseq Genomics in R","text":"","code":"R CMD INSTALL \"rmetasim-master\" # Terminal command sudo rm -R rmetasim* # to remove the folders no longer required"},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"download-the-github-version","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Download the github version","title":"RADseq Genomics in R","text":"","code":"# terminal cd Downloads git clone --recursive https://github.com/dmlc/xgboost cd xgboost"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"error","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Error?","title":"RADseq Genomics in R","text":"’re getting error: \"https\" supported disabled libcurl, extra steps required, check installation problems section install OpenSSL curl enabling https ---ssl option.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"modification","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Modification","title":"RADseq Genomics in R","text":"Modify text editor configure file inside xgboost/R-package folder:","code":"# Go to line 1676 # change ac_pkg_openmp=no # to ac_pkg_openmp=yes #save the file under the same name"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"makevars-configuration","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Makevars configuration","title":"RADseq Genomics in R","text":"XGBoost requires Makevars specifications. lines, comment (#) compiling:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ CXX11=/usr/local/bin/g++ CXX14=/usr/local/bin/g++ CXX17=/usr/local/bin/g++ SHLIB_OPENMP_CFLAGS= -fopenmp SHLIB_OPENMP_FCFLAGS= -fopenmp SHLIB_OPENMP_FFLAGS= -fopenmp SHLIB_OPENMP_CXXFLAGS= -fopenmp CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe LDFLAGS=-L/usr/local/lib -Wl,-rpath,/usr/local/lib CPPFLAGS=-I/usr/local/include -I/usr/local/include"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"compile-1","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Compile","title":"RADseq Genomics in R","text":"","code":"sudo R CMD INSTALL R-package"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"test-r-package","dir":"Articles","previous_headings":"Specific librairies installation > XGBoost","what":"Test R-package","title":"RADseq Genomics in R","text":"see time difference runs","code":"require(xgboost) x <-  matrix(rnorm(100*10000), 10000, 100) y <-  x %*% rnorm(100) + rnorm(1000)  system.time({bst = xgboost(data = x, label = y, nthread = 1, nround = 100, verbose = FALSE)}) system.time({bst = xgboost(data = x, label = y, nthread = 4, nround = 100, verbose = FALSE)})"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"lightgbm","dir":"Articles","previous_headings":"Specific librairies installation","what":"LightGBM","title":"RADseq Genomics in R","text":"LightGBM requires OpenMP-enabled compiler. Currently, doesn’t work well clang, make sure updated GCC compiler (instructions ). Additionally, LightGBM requires CMake","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"download-and-install-cmake","dir":"Articles","previous_headings":"Specific librairies installation > LightGBM","what":"Download and install CMake","title":"RADseq Genomics in R","text":"add CMake PATH:","code":"#In browser or using curl in Terminal https://cmake.org/files/v3.12/cmake-3.12.2-Darwin-x86_64.dmg # double-click on the disk image and follow instructions PATH=\"/Applications/CMake.app/Contents/bin\":\"$PATH\" # Or, to install symlinks to '/usr/local/bin', run: sudo \"/Applications/CMake.app/Contents/bin/cmake-gui\" --install # Or, to install symlinks to another directory, run: sudo \"/Applications/CMake.app/Contents/bin/cmake-gui\" --install=/path/to/bin #Then, run the following commands to install LightGBM:"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"download-and-install-lightgbm","dir":"Articles","previous_headings":"Specific librairies installation > LightGBM","what":"Download and Install LightGBM","title":"RADseq Genomics in R","text":"","code":"cd Downloads git clone --recursive https://github.com/Microsoft/LightGBM cd LightGBM Rscript build_r.R # previous version required running these lines instead #cd LightGBM/R-package #export CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ #R CMD INSTALL --build . --no-multiarch"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"randomforestsrc","dir":"Articles","previous_headings":"Specific librairies installation","what":"randomForestSRC","title":"RADseq Genomics in R","text":"randomForestSRC requires GCC OpenMP-enabled compiler run parallel. See instructions already done.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"makevars-configuration-1","dir":"Articles","previous_headings":"Specific librairies installation > randomForestSRC","what":"Makevars configuration","title":"RADseq Genomics in R","text":"Check lines commented ~/.R/Makevars file:","code":"usethis::edit_r_makevars() CC=/usr/local/bin/gcc CXX=/usr/local/bin/g++ CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe PKG_CFLAGS= -O3 -Wall -pipe -pedantic -std=gnu99 -fopenmp PKG_CXXFLAGS=-fopenmp -std=c++11 FC=/usr/local/bin/gfortran F77=/usr/local/bin/gfortran LDFLAGS=-L/usr/local/lib PKG_LIBS = \"-liconv\""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"download-and-install","dir":"Articles","previous_headings":"Specific librairies installation > randomForestSRC","what":"Download and install","title":"RADseq Genomics in R","text":"Terminal run steps download compile randomForestSRC: Make sure autoconf installed: output: autoconf: error: input file, , install following steps . want make sure line printed execution previous command: checking whether OpenMP work package... yes checking /usr/local/bin/gcc option support OpenMP... -fopenmp","code":"cd ~/Downloads curl -L https://cran.r-project.org/src/contrib/randomForestSRC_2.9.3.tar.gz | tar xf - cd randomForestSRC # in Terminal cd ~/Downloads autoconf # in Terminal cd ~/Downloads/randomForestSRC autoconf cd ~/Downloads R CMD INSTALL --preclean --clean randomForestSRC"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"ranger","dir":"Articles","previous_headings":"Specific librairies installation","what":"ranger","title":"RADseq Genomics in R","text":"ranger easy install.","code":"install.packages(\"ranger\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"missranger","dir":"Articles","previous_headings":"Specific librairies installation","what":"missRanger","title":"RADseq Genomics in R","text":"missRanger also easy install.","code":"install.packages(\"missRanger\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"miceranger","dir":"Articles","previous_headings":"Specific librairies installation","what":"miceRanger","title":"RADseq Genomics in R","text":"miceRanger easy install.","code":"install.packages(\"miceRanger\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"pcamethods","dir":"Articles","previous_headings":"Specific librairies installation","what":"pcaMethods","title":"RADseq Genomics in R","text":"install pcaMethods, bioconductor:","code":"BiocManager::install(\"pcaMethods\")"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"fastsimcoal2","dir":"Articles","previous_headings":"Specific librairies installation","what":"fastsimcoal2","title":"RADseq Genomics in R","text":"install fastsimcoal2 v.2.6.0.3, use grur::simulate_rad:","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"linux-1","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"LINUX","title":"RADseq Genomics in R","text":"","code":"curl -O http://cmpg.unibe.ch/software/fastsimcoal2/downloads/fsc26_linux64.zip unzip fsc26_linux64.zip sudo mv fsc26_linux64/fsc26 /usr/local/bin/fsc26 # will ask for your computer password"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"macos-1","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"MacOS","title":"RADseq Genomics in R","text":"","code":"cd ~/Downloads curl -O http://cmpg.unibe.ch/software/fastsimcoal2/downloads/fsc26_mac64.zip unzip fsc26_mac64.zip sudo mv fsc26_mac64/fsc26 /usr/local/bin/fsc26 # will ask for your computer password"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"common-to-both-os","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"Common to both OS:","title":"RADseq Genomics in R","text":"Re-start R software fastsimcoal2 automatically PATH…","code":"sudo chmod 777 /usr/local/bin/fsc26 fsc26"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"path-1","dir":"Articles","previous_headings":"Specific librairies installation > fastsimcoal2","what":"PATH","title":"RADseq Genomics in R","text":"see path installation, Terminal: doesn’t work, : Remove files folder:","code":"which fsc26 # in macOS: # /usr/local/bin/fsc26 source ~/.bash_profile sudo rm -R ~/Downloads/fsc26_mac64*"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"colony","dir":"Articles","previous_headings":"Specific librairies installation","what":"COLONY","title":"RADseq Genomics in R","text":"install COLONY 30/07/2018, V2.0.6.5:","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"macos-2","dir":"Articles","previous_headings":"Specific librairies installation > COLONY","what":"MacOS","title":"RADseq Genomics in R","text":"old openmpi version (openmpi-1.6.5) required, saddly. download COLONY, follow instructions Jinliang Wang ZSL website. file need uncompress named: colony2.mac_.20180730.zip.","code":"cd ~/Downloads curl -L https://download.open-mpi.org/release/open-mpi/v1.6/openmpi-1.6.5.tar.gz | tar xf - cd openmpi-1.6.5 export TMPDIR=/tmp ./configure F77=gfortran #--prefix=/usr/local -openmp # no longer work for some reason make -j 12 sudo make install sudo rm -R ~/Downloads/openmpi*"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"linux-2","dir":"Articles","previous_headings":"Specific librairies installation > COLONY","what":"Linux","title":"RADseq Genomics in R","text":"download COLONY, follow instructions Jinliang Wang ZSL website. file need uncompress named: colony2.linux_.20180730.zip. Several options available depending compiler installed.","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"update-github","dir":"Articles","previous_headings":"Useful","what":"Update Github","title":"RADseq Genomics in R","text":"macOS comes Github, Version Control System (VCS), pre-installed. However, install /usr/bin/git can make difficult beginners update. change , run commands: Install GNU Autoconf Install Github","code":"cd ~/Downloads curl -L http://ftp.gnu.org/gnu/autoconf/autoconf-latest.tar.gz | tar xf - cd autoconf-2.69 ./configure make sudo make install cd ..  sudo rm -R ~/Downloads/autoconf-* git --version                   # show current git version installed which git                       # returns where is git on your computer cd ~/Downloads git clone https://github.com/git/git # install the latest Git cd git make configure ./configure make -j12 sudo make install cd ..  sudo rm -R ~/Downloads/git/     # remove git folder source ~/.bash_profile          # reload startup script git --version                   # confirmed the version you just installed which git                       # returns /usr/local/bin"},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"macos-terminal-from-specific-folder","dir":"Articles","previous_headings":"Useful","what":"macOS Terminal from specific folder","title":"RADseq Genomics in R","text":"System Preferences choose Keyboard -> Shortcuts. left panel, choose Services. right panel, Files Folders, choose New Terminal Folder /New Terminal Tab Folder. Now can right-click track pad mouse folder choose Services -> New Terminal Folder!","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/rad_genomics_computer_setup.html","id":"shortcut-to-folder-path","dir":"Articles","previous_headings":"Useful","what":"Shortcut to folder path","title":"RADseq Genomics in R","text":"macOS, open Automator application.  Go Finder, select folder right click see ‘copy path clipboard’ bottom Services.","code":"File -> New (cmd-N) Choose: Services Left panel, choose: Library -> Utilities Middle, choose: Copy to Clipboard and drag it to the right panel Now you want to have: Service receives selected FILES OR FOLDERS in FINDER> You should have something similar to the image below: Save (cmd-S) or File -> Save service as: copy path to clipboard"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"goal-of-this-vignette","dir":"Articles > Web_only","previous_headings":"","what":"Goal of this vignette","title":"Comparisons of Fst computations","text":"Compare assigner's Fst calculations (using Weir Cockerham, 1984) alternatives. make differences bottlenecks really stand use simulated dataset empirical RADseq dataset 10K markers.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"prepare-your-r-session","dir":"Articles > Web_only","previous_headings":"","what":"Prepare your R session","title":"Comparisons of Fst computations","text":"Highly recommended clean workspace: rm(list = ls()) Put Rmd notebook directory data might interested package called use setwd(\"//NEW/PATH//\"), change working directory. Install R packages Versions packages software: Optional software: GenoDive macOS (v.3.04) VCFtools (v.0.1.17)","code":"# install required packages install.packages(c(\"diveRsity\", \"hierfstat\", \"StAMPP\")) if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github('ericarcher/strataG', build_vignettes = TRUE) if(!require(\"BiocManager\")) install.packages(\"BiocManager\") BiocManager::install(version = \"3.12\") BiocManager::install(\"SNPRelate\") if (!require(\"ggcorrplot\")) install.packages(\"ggcorrplot\") devtools::install_github(\"thierrygosselin/assigner\", build_vignettes = TRUE) # Check packages versions packageVersion('assigner') # 0.5.8 packageVersion('diveRsity') # 1.9.90 packageVersion('hierfstat') # 0.5.7 packageVersion('stAMPP') # 1.6.1 packageVersion('strataG') # 2.4.910 packageVersion('SNPRelate') # 1.24.0"},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset","dir":"Articles > Web_only","previous_headings":"Datasets","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"’re going use unfiltered vcf sunflower dataset Owens et al. 2016, kindly provided Gregory Owens. dataset missing data. Owens GL, Baute GJ, Rieseberg LH. Revisiting classic case introgression: hybridization gene flow Californian sunflowers. Abbott RJ, Barton NH, Good JM, editors. Molecular Ecology. 2016;25: 2630–2643. doi:10.1111/mec.13569 Download files: vcf strata. ’s strata file ? Read doc.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets","dir":"Articles > Web_only","previous_headings":"Datasets","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"running vignette , saw something strange results. explore , second grind testing add 2 additional datasets: data_assigner_sim_01 data_assigner_sim_02. documentation explains simulated data produced. differ mainly migration rate resulted contrastingly different Fst, admixture/membership probability.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"generate-the-output-files","dir":"Articles > Web_only","previous_headings":"","what":"Generate the output files","title":"Comparisons of Fst computations","text":"use radiator::genomic_converter produce required files R objects:","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-1","dir":"Articles > Web_only","previous_headings":"Generate the output files","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"VCF stats: original number markers 34258. default, radiator::genomic_converter keep polymorphic markers common strata. 15973 biallelic markers recovered. Number populations: 9 Number individuals: 88 sunflower.filtered object list several objects inside: function also produced folder several files, including: genepop file SNPRelate GDS file hierfstat file gtypes file genlight file tidy data file learn output folders files: radiator::genomic_converter Note timing use fancy timing packages (microbenchmark, bench), simplicity ’re just going use system.time.","code":"library(assigner) # radiator is installed automatically with assigner sunflower.filtered <- radiator::genomic_converter(   data = \"sunflower.vcf\",    strata = \"sunflower.strata.tsv\",    output = c(     \"genepop\", # for GenoDive and diveRsity     \"gtypes\", # for strataG     \"genlight\", # for StAMPP     \"hierfstat\", # for Hierfstat     \"snprelate\" # for SNPRelate   ) ) %>% dplyr::glimpse() names(sunflower.filtered) #> [1] \"hierfstat\" \"gtypes\"    \"genlight\"  \"snprelate\" \"tidy.data\" # the tidy dataset is used by assigner"},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"sim_01","dir":"Articles > Web_only","previous_headings":"Generate the output files > Simulated datasets","what":"sim_01","title":"Comparisons of Fst computations","text":"","code":"data_assigner_sim_01 %<>%    dplyr::mutate(POP_ID = factor(x = POP_ID, levels = c(\"POP_1\", \"POP_2\", \"POP_3\", \"POP_4\", \"POP_5\"))) %>%    dplyr::arrange(POP_ID)  sim.data1 <- radiator::genomic_converter(   data = data_assigner_sim_01,    output = c(     \"genepop\", # for GenoDive and diveRsity     \"gtypes\", # for strataG     \"genlight\", # for StAMPP     \"hierfstat\", # for Hierfstat     \"snprelate\" # for SNPRelate   ),   filename = \"sim01\",   path.folder = \"fst_sim01\",   internal = TRUE,   verbose = FALSE ) sim.data1$tidy.data %<>% dplyr::arrange(POP_ID)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"sim_02","dir":"Articles > Web_only","previous_headings":"Generate the output files > Simulated datasets","what":"sim_02","title":"Comparisons of Fst computations","text":"","code":"data_assigner_sim_02 %<>%    dplyr::mutate(POP_ID = factor(x = POP_ID, levels = c(\"POP_1\", \"POP_2\", \"POP_3\", \"POP_4\", \"POP_5\"))) %>%    dplyr::arrange(POP_ID)  sim.data2 <- radiator::genomic_converter(   data = data_assigner_sim_02,    output = c(     \"genepop\", # for GenoDive and diveRsity     \"gtypes\", # for strataG     \"genlight\", # for StAMPP     \"hierfstat\", # for Hierfstat     \"snprelate\" # for SNPRelate   ),   filename = \"sim02\",   path.folder = \"fst_sim02\",   internal = TRUE,   verbose = FALSE ) sim.data2$tidy.data %<>% dplyr::arrange(POP_ID)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"hierfstat","dir":"Articles > Web_only","previous_headings":"","what":"hierfstat","title":"Comparisons of Fst computations","text":"Let’s start Gold Standard, Jérôme Goudet’s hierfstat package.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-2","dir":"Articles > Web_only","previous_headings":"hierfstat","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"","code":"# ETA ~ 30 min on my MBP, so yes, you have time for coffee... pops <- as.character(unique(sunflower.filtered$tidy.data$POP_ID))# pop string  system.time(   hierfstat.fst <- hierfstat::pairwise.WCfst(     dat = sunflower.filtered$hierfstat,      diploid = TRUE   ) %>%      # The result need some work     # We transform the matrix into a useful tibble:     magrittr::set_colnames(x = ., value = pops) %>%      magrittr::set_rownames(x = ., value = pops) %>%      radiator::distance2tibble(       x = ., remove.diag = TRUE, remove.lower = TRUE, na.diag = TRUE, relative = FALSE     ) %>%      magrittr::set_colnames(x = ., value = c(\"POP1\", \"POP2\", \"HIERFSTAT\")) %>%      dplyr::arrange(POP1, POP2) ) #> 1233.880sec ~20 min hierfstat.fst"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-2","dir":"Articles > Web_only","previous_headings":"hierfstat","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"pops <- as.character(unique(sim.data1$tidy.data$POP_ID))# pop string hierfstat.sim01.fst <- hierfstat::pairwise.WCfst(     dat = sim.data1$hierfstat,      diploid = TRUE   ) %>%      # The result need some work     # We transform the matrix into a useful tibble:     magrittr::set_colnames(x = ., value = pops) %>%      magrittr::set_rownames(x = ., value = pops) %>%      radiator::distance2tibble(       x = ., remove.diag = TRUE, remove.lower = TRUE, na.diag = TRUE, relative = FALSE     ) %>%      magrittr::set_colnames(x = ., value = c(\"POP1\", \"POP2\", \"HIERFSTAT_SIM01\")) %>%      dplyr::arrange(POP1, POP2) pops <- as.character(unique(sim.data2$tidy.data$POP_ID))# pop string   hierfstat.sim02.fst <- hierfstat::pairwise.WCfst(     dat = sim.data2$hierfstat,      diploid = TRUE   ) %>%      # The result need some work     # We transform the matrix into a useful tibble:     magrittr::set_colnames(x = ., value = pops) %>%      magrittr::set_rownames(x = ., value = pops) %>%      radiator::distance2tibble(       x = ., remove.diag = TRUE, remove.lower = TRUE, na.diag = TRUE, relative = FALSE     ) %>%      magrittr::set_colnames(x = ., value = c(\"POP1\", \"POP2\", \"HIERFSTAT_SIM02\")) %>%      dplyr::arrange(POP1, POP2)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"stratag","dir":"Articles > Web_only","previous_headings":"","what":"strataG","title":"Comparisons of Fst computations","text":"Eric Archer’s strataG package.","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-3","dir":"Articles > Web_only","previous_headings":"strataG","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"","code":"system.time(   stratag.fst <- strataG::popStructTest(     g = sunflower.filtered$gtypes,      stats = \"fst\",      type = \"both\",      quietly = TRUE,      max.cores = parallel::detectCores() - 1,      nrep = 0,      keep.null = FALSE,      write.output = FALSE) %$%     pairwise$result %>%      dplyr::select(POP1 = strata.1, POP2 = strata.2, STRATAG = Fst) ) stratag.fst #>657.377sec ~ 11 min"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-3","dir":"Articles > Web_only","previous_headings":"strataG","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"stratag.sim01.fst <- strataG::popStructTest(     g = sim.data1$gtypes,      stats = \"fst\",      type = \"both\",      quietly = TRUE,      max.cores = parallel::detectCores() - 1,      nrep = 0,      keep.null = FALSE,      write.output = FALSE) %$%     pairwise$result %>%      dplyr::select(POP1 = strata.1, POP2 = strata.2, STRATAG_SIM01 = Fst) stratag.sim02.fst <- strataG::popStructTest(     g = sim.data2$gtypes,      stats = \"fst\",      type = \"both\",      quietly = TRUE,      max.cores = parallel::detectCores() - 1,      nrep = 0,      keep.null = FALSE,      write.output = FALSE) %$%     pairwise$result %>%      dplyr::select(POP1 = strata.1, POP2 = strata.2, STRATAG_SIM02 = Fst)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"diversity","dir":"Articles > Web_only","previous_headings":"","what":"diveRsity","title":"Comparisons of Fst computations","text":"Kevin Keenan’s diveRsity package requires genepop file. function optimized C++, need coffee (< 1 min MBP)","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-4","dir":"Articles > Web_only","previous_headings":"diveRsity","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"","code":"pops <- as.character(unique(sunflower.filtered$tidy.data$POP_ID)) # pop string system.time(   diversity.fst <- diveRsity::diffCalc(     infile = list.files(       path = \".\",        pattern = \"_genepop.gen\",        full.names = TRUE,       recursive = TRUE     ),      outfile = \"sunflower_diversity_output\",      fst = TRUE,     pairwise = TRUE,     para = TRUE   ) %$%     pairwise %$%     Fst %>%      # The result need some work     # We transform the matrix into a useful tibble:     magrittr::set_colnames(x = ., value = pops) %>%      magrittr::set_rownames(x = ., value = pops) %>%      radiator::distance2tibble(       x = .,        remove.diag = TRUE,        remove.lower = FALSE, # FALSE because their's only the lower diag       na.diag = TRUE,        relative = FALSE     ) %>%      # we switch the POP id column here to match the others     magrittr::set_colnames(x = ., value = c(\"POP2\", \"POP1\", \"DIVERSITY\")) ) #> 42.711 sec Wow! this is very fast, plus other distances are automatically generated! diversity.fst"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-4","dir":"Articles > Web_only","previous_headings":"diveRsity","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"pops <- as.character(unique(sim.data1$tidy.data$POP_ID)) # pop string diversity.sim01.fst <- diveRsity::diffCalc(   infile = list.files(     path = \".\",      pattern = \"sim01_genepop.gen\",      full.names = TRUE,     recursive = TRUE   ),    outfile = \"sim_data1_diversity_output\",    fst = TRUE,   pairwise = TRUE,   para = TRUE ) %$%   pairwise %$%   Fst %>%    # The result need some work   # We transform the matrix into a useful tibble:   magrittr::set_colnames(x = ., value = pops) %>%    magrittr::set_rownames(x = ., value = pops) %>%    radiator::distance2tibble(     x = .,      remove.diag = TRUE,      remove.lower = FALSE, # FALSE because their's only the lower diag     na.diag = TRUE,      relative = FALSE   ) %>%    # we switch the POP id column here to match the others   magrittr::set_colnames(x = ., value = c(\"POP2\", \"POP1\", \"DIVERSITY_SIM01\")) pops <- as.character(unique(sim.data2$tidy.data$POP_ID)) # pop string diversity.sim02.fst <- diveRsity::diffCalc(   infile = list.files(     path = \".\",      pattern = \"sim02_genepop.gen\",      full.names = TRUE,     recursive = TRUE   ),     outfile = \"sim_data2_diversity_output\",    fst = TRUE,   pairwise = TRUE,   para = TRUE ) %$%   pairwise %$%   Fst %>%    # The result need some work   # We transform the matrix into a useful tibble:   magrittr::set_colnames(x = ., value = pops) %>%    magrittr::set_rownames(x = ., value = pops) %>%    radiator::distance2tibble(     x = .,      remove.diag = TRUE,      remove.lower = FALSE, # FALSE because their's only the lower diag     na.diag = TRUE,      relative = FALSE   ) %>%    # we switch the POP id column here to match the others   magrittr::set_colnames(x = ., value = c(\"POP2\", \"POP1\", \"DIVERSITY_SIM02\"))"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"snprelate","dir":"Articles > Web_only","previous_headings":"","what":"SNPRelate","title":"Comparisons of Fst computations","text":"Xiuwen Zheng’s SNPRelate package fast. ---box pairwise Fst analysis. implemented .","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-5","dir":"Articles > Web_only","previous_headings":"SNPRelate","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"need strata Showing global Fst : Build function conduct pairwise Fst SNPRelate: run need combination populations: Run pairwise implementation:","code":"strata <- radiator::read_strata(strata = \"sunflower.strata.tsv\") %$% strata system.time(   snprelate.fst <- SNPRelate::snpgdsFst(     gdsobj = sunflower.filtered$snprelate,     population = strata$STRATA, # factors required     sample.id = strata$INDIVIDUALS,     snp.id = NULL,     method = \"W&C84\",     remove.monosnp = TRUE,     maf = NaN,     missing.rate = NaN,     autosome.only = FALSE,     with.id = FALSE,     verbose = TRUE   ) ) #> 0.029sec wo!  names(snprelate.fst) #> snprelate.fst$Fst: weighted Fst estimate #> snprelate.fst$MeanFst: the average of Fst estimates across SNPs #> snprelate.fst$FstSNP: a vector of Fst for each SNP pairwise_fst_snprelate <- function(pop.pairwise, data, strata) {   strata.temp <- dplyr::filter(.data = strata, STRATA %in% pop.pairwise) %>%     dplyr::mutate(STRATA = droplevels(STRATA))      fst <- SNPRelate::snpgdsFst(     gdsobj = data,     population = strata.temp$STRATA, # factors required     sample.id = strata.temp$INDIVIDUALS,     snp.id = NULL,     method = \"W&C84\",     remove.monosnp = TRUE,     maf = NaN,     missing.rate = NaN,     autosome.only = FALSE,     with.id = FALSE,     verbose = TRUE   )   #prepare the results into a tibble:   fst <- tibble::tibble(     POP1 = pop.pairwise[1],      POP2 = pop.pairwise[2],      SNPRELATE_MEAN = fst$MeanFst,     SNPRELATE_WEIGHTED = fst$Fst   )   return(fst) } pop.pairwise <- utils::combn(as.character(unique(strata$STRATA)), 2, simplify = FALSE) system.time(   snprelate.fst <- purrr::map_dfr(     .x = pop.pairwise,     .f = pairwise_fst_snprelate,     data = sunflower.filtered$snprelate,     strata = strata   ) ) #> 0.245 sec that's the fastest so far!"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-5","dir":"Articles > Web_only","previous_headings":"SNPRelate","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"strata <- radiator::generate_strata(data = sim.data1$tidy.data) %>% dplyr::rename(STRATA = POP_ID) pop.pairwise <- utils::combn(as.character(unique(strata$STRATA)), 2, simplify = FALSE) snprelate.sim01.fst <- purrr::map_dfr(   .x = pop.pairwise,   .f = pairwise_fst_snprelate,   data = sim.data1$snprelate,   strata = strata ) %>%    dplyr::rename(SNPRELATE_MEAN_SIM01 = SNPRELATE_MEAN, SNPRELATE_WEIGHTED_SIM01 = SNPRELATE_WEIGHTED)  strata <- radiator::generate_strata(data = sim.data2$tidy.data) %>% dplyr::rename(STRATA = POP_ID) pop.pairwise <- utils::combn(as.character(unique(strata$STRATA)), 2, simplify = FALSE) snprelate.sim02.fst <- purrr::map_dfr(   .x = pop.pairwise,   .f = pairwise_fst_snprelate,   data = sim.data2$snprelate,   strata = strata ) %>%    dplyr::rename(SNPRELATE_MEAN_SIM02 = SNPRELATE_MEAN, SNPRELATE_WEIGHTED_SIM02 = SNPRELATE_WEIGHTED)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"genodive","dir":"Articles > Web_only","previous_headings":"","what":"GenoDive","title":"Comparisons of Fst computations","text":"Inside Patrick Meirmans’s GenoDive software, import drag genepop file Run: Analysis -> Pairwise Differentiation -> F_st, choose 1 permutations. Save results copy/paste MS Excel text editor: genodive.fst.tsv. need coffee, GenoDive coded Objective-C (~ < 3 sec MBP)","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-6","dir":"Articles > Web_only","previous_headings":"GenoDive","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"Obviously, timing gets doesn’t reflect whole process: data imported GenoDive several manipulations results required get GenoDive R","code":"# Import in R # Add the proper columns and rows names pops <- as.character(unique(sunflower.filtered$tidy.data$POP_ID)) # pop string genodive.fst <- readr::read_tsv(   file = \"genodive.fst.tsv\",   col_names = pops ) %>%    as.matrix(.) %>%    magrittr::set_rownames(x = ., value = pops) %>%    radiator::distance2tibble(     x = .,      remove.diag = TRUE,      remove.lower = TRUE, # FALSE because their's only the lower diag     na.diag = TRUE,      relative = FALSE   ) %>%    magrittr::set_colnames(x = ., value = c(\"POP1\", \"POP2\", \"GENODIVE\")) genodive.fst"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-6","dir":"Articles > Web_only","previous_headings":"GenoDive","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"pops <- as.character(unique(sim.data1$tidy.data$POP_ID)) # pop string genodive.sim01.fst <- readr::read_tsv(   file = list.files(       path = \".\",        pattern = \"genodive.sim01.fst.tsv\",        full.names = TRUE,       recursive = TRUE     ),   col_names = pops ) %>%    as.matrix(.) %>%    magrittr::set_rownames(x = ., value = pops) %>%    radiator::distance2tibble(     x = .,      remove.diag = TRUE,      remove.lower = TRUE, # FALSE because their's only the lower diag     na.diag = TRUE,      relative = FALSE   ) %>%    magrittr::set_colnames(x = ., value = c(\"POP1\", \"POP2\", \"GENODIVE_SIM01\")) pops <- as.character(unique(sim.data2$tidy.data$POP_ID)) # pop string genodive.sim02.fst <- readr::read_tsv(   file = list.files(       path = \".\",        pattern = \"genodive.sim02.fst.tsv\",        full.names = TRUE,       recursive = TRUE     ),   col_names = pops ) %>%    as.matrix(.) %>%    magrittr::set_rownames(x = ., value = pops) %>%    radiator::distance2tibble(     x = .,      remove.diag = TRUE,      remove.lower = TRUE, # FALSE because their's only the lower diag     na.diag = TRUE,      relative = FALSE   ) %>%    magrittr::set_colnames(x = ., value = c(\"POP1\", \"POP2\", \"GENODIVE_SIM02\"))"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"stampp","dir":"Articles > Web_only","previous_headings":"","what":"StAMPP","title":"Comparisons of Fst computations","text":"Luke Pembleton’s StAMPP package use genlight object input:","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-7","dir":"Articles > Web_only","previous_headings":"StAMPP","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"","code":"system.time(   stampp.fst <- StAMPP::stamppFst(     geno = sunflower.filtered$genlight,      nboots = 1,      percent = 95,      nclusters = parallel::detectCores() - 1   ) %>%      # The distance matrix need some love     # if we want to compare it with the others:     radiator::distance2tibble(       x = .,        remove.diag = TRUE,        remove.lower = FALSE,        na.diag = TRUE,        relative = FALSE     ) %>%      # we switch the POP id column here to match the others     magrittr::set_colnames(x = ., value = c(\"POP2\", \"POP1\", \"STAMPP\")) %>%      dplyr::arrange(POP1, POP2) ) #> 39.281 sec!"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-7","dir":"Articles > Web_only","previous_headings":"StAMPP","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"stampp.sim01.fst <- StAMPP::stamppFst(     geno = sim.data1$genlight,      nboots = 1,      percent = 95,      nclusters = parallel::detectCores() - 1   ) %>%      # The distance matrix need some love     # if we want to compare it with the others:     radiator::distance2tibble(       x = .,        remove.diag = TRUE,        remove.lower = FALSE,        na.diag = TRUE,        relative = FALSE     ) %>%      # we switch the POP id column here to match the others     magrittr::set_colnames(x = ., value = c(\"POP2\", \"POP1\", \"STAMPP_SIM01\")) %>%      dplyr::arrange(POP1, POP2)  stampp.sim02.fst <- StAMPP::stamppFst(     geno = sim.data2$genlight,      nboots = 1,      percent = 95,      nclusters = parallel::detectCores() - 1   ) %>%      # The distance matrix need some love     # if we want to compare it with the others:     radiator::distance2tibble(       x = .,        remove.diag = TRUE,        remove.lower = FALSE,        na.diag = TRUE,        relative = FALSE     ) %>%      # we switch the POP id column here to match the others     magrittr::set_colnames(x = ., value = c(\"POP2\", \"POP1\", \"STAMPP_SIM02\")) %>%      dplyr::arrange(POP1, POP2)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"vcftools","dir":"Articles > Web_only","previous_headings":"","what":"VCFtools","title":"Comparisons of Fst computations","text":"’m particularly fond VCFtools Fst. much manipulation files. sake exercise ’m going compare quickly 2 populations empirical dataset .","code":""},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-8","dir":"Articles > Web_only","previous_headings":"VCFtools","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"command used: PLINK users, note --fst option PLINK v.1.9 actually port VCFtools.. , comparison VCFtools stops , painfull conduct pairwise, getting ouput ready R, etc. prone human error much work automate benefit (’ll understand VCFtools results compares packages).","code":"pop1 <- dplyr::filter(strata, STRATA == \"G100\") %>% dplyr::select(INDIVIDUALS) %>% readr::write_tsv(x = ., path = \"pop1.txt\", col_names = FALSE) pop2 <- dplyr::filter(strata, STRATA == \"G102\") %>% dplyr::select(INDIVIDUALS) %>% readr::write_tsv(x = ., path = \"pop2.txt\", col_names = FALSE) vcftools --vcf sunflower.vcf --weir-fst-pop pop1.txt --weir-fst-pop pop2.txt --out pop1_vs_pop2  #> Fst between G100 and G102: #> Weir and Cockerham mean Fst estimate: 0.036903 #> Weir and Cockerham weighted Fst estimate: 0.16222"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-8","dir":"Articles > Web_only","previous_headings":"VCFtools","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"conducted","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"empirical-dataset-9","dir":"Articles > Web_only","previous_headings":"assigner","what":"Empirical dataset","title":"Comparisons of Fst computations","text":"Learn assigner::fst_WC84 dedicated vignette.","code":"assigner.fst <- assigner::fst_WC84(   data = sunflower.filtered$tidy.data,    pairwise = TRUE,   parallel.core = parallel::detectCores() - 1,   verbose = TRUE ) %$%   pairwise.fst %>%    dplyr::rename(ASSIGNER = FST) %>%    dplyr::select(-N_MARKERS) #> 49 sec assigner.fst"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"simulated-datasets-9","dir":"Articles > Web_only","previous_headings":"assigner","what":"Simulated datasets","title":"Comparisons of Fst computations","text":"","code":"assigner.sim01.fst <- assigner::fst_WC84(   data = sim.data1$tidy.data,    pairwise = TRUE,   parallel.core = parallel::detectCores() - 1,   verbose = TRUE ) %$%   pairwise.fst %>%    dplyr::rename(ASSIGNER_SIM01 = FST) %>%    dplyr::select(-N_MARKERS)  assigner.sim02.fst <- assigner::fst_WC84(   data = sim.data2$tidy.data,    pairwise = TRUE,   parallel.core = parallel::detectCores() - 1,   verbose = TRUE ) %$%   pairwise.fst %>%    dplyr::rename(ASSIGNER_SIM02 = FST) %>%    dplyr::select(-N_MARKERS)"},{"path":[]},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"generate-a-summary-tibble","dir":"Articles > Web_only","previous_headings":"Comparisons > Empirical dataset","what":"Generate a summary tibble","title":"Comparisons of Fst computations","text":"haven’t run codes : highlight first line, pops G100 G102: Gold Standard: HIERFSTAT 0.12 min value: SNPRELATE_MEAN 0.08 max value: SNPRELATE_WEIGHTED 0.14 Weir Cockerham mean Fst estimate: 0.036903 !!! Weir Cockerham weighted Fst estimate: 0.16222 !!! ’s bit scary…","code":"fst.summary <- suppressWarnings(   assigner.fst %>%     dplyr::full_join(diversity.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(genodive.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(hierfstat.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(stampp.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(stratag.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(snprelate.fst, by = c(\"POP1\", \"POP2\")) ) fst.summary <- readr::read_tsv(file = \"fst.summary.tsv\", col_types = \"ccnnnnnnnn\") fst.summary ## # A tibble: 36 × 10 ##    POP1  POP2  ASSIGNER DIVERSITY GENODIVE HIERFSTAT STAMPP STRATAG ##    <chr> <chr>    <dbl>     <dbl>    <dbl>     <dbl>  <dbl>   <dbl> ##  1 G100  G102     0.123     0.123    0.115     0.123  0.123   0.123 ##  2 G100  G103     0.210     0.210    0.215     0.210  0.211   0.211 ##  3 G100  G108     0.394     0.395    0.39      0.394  0.394   0.394 ##  4 G100  G109     0.299     0.299    0.287     0.299  0.299   0.299 ##  5 G100  G111     0.369     0.370    0.356     0.369  0.369   0.369 ##  6 G100  G118     0.169     0.169    0.156     0.169  0.169   0.169 ##  7 G100  G122     0.269     0.270    0.255     0.269  0.269   0.269 ##  8 G100  G124     0.366     0.366    0.362     0.366  0.366   0.366 ##  9 G102  G103     0.118     0.118    0.115     0.118  0.119   0.119 ## 10 G102  G108     0.322     0.323    0.319     0.322  0.322   0.322 ## # ℹ 26 more rows ## # ℹ 2 more variables: SNPRELATE_MEAN <dbl>, SNPRELATE_WEIGHTED <dbl> dplyr::filter(fst.summary, dplyr::row_number() == 1L) ## # A tibble: 1 × 10 ##   POP1  POP2  ASSIGNER DIVERSITY GENODIVE HIERFSTAT STAMPP STRATAG ##   <chr> <chr>    <dbl>     <dbl>    <dbl>     <dbl>  <dbl>   <dbl> ## 1 G100  G102     0.123     0.123    0.115     0.123  0.123   0.123 ## # ℹ 2 more variables: SNPRELATE_MEAN <dbl>, SNPRELATE_WEIGHTED <dbl>"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"generate-a-correlation-matrix","dir":"Articles > Web_only","previous_headings":"Comparisons > Empirical dataset","what":"Generate a correlation matrix","title":"Comparisons of Fst computations","text":"’s obviously differences look pairwise comparisons separately. difference approaches taken packages/software probably depends numerous things: common polymorphic markers handle sample size differences managed missing data rouding steps codes Let’s look globally correlation matrix: prefer look tibble…","code":"fst.corr <- round(cor(x = dplyr::select(fst.summary, -POP1, -POP2)), 6) fst.corr ##                    ASSIGNER DIVERSITY GENODIVE HIERFSTAT   STAMPP  STRATAG ## ASSIGNER           1.000000  0.999998 0.997723  1.000000 0.999996 0.999996 ## DIVERSITY          0.999998  1.000000 0.997635  0.999998 0.999995 0.999995 ## GENODIVE           0.997723  0.997635 1.000000  0.997723 0.997702 0.997702 ## HIERFSTAT          1.000000  0.999998 0.997723  1.000000 0.999996 0.999996 ## STAMPP             0.999996  0.999995 0.997702  0.999996 1.000000 1.000000 ## STRATAG            0.999996  0.999995 0.997702  0.999996 1.000000 1.000000 ## SNPRELATE_MEAN     0.973732  0.974023 0.965324  0.973732 0.973953 0.973953 ## SNPRELATE_WEIGHTED 0.996752  0.996691 0.998345  0.996752 0.996729 0.996729 ##                    SNPRELATE_MEAN SNPRELATE_WEIGHTED ## ASSIGNER                 0.973732           0.996752 ## DIVERSITY                0.974023           0.996691 ## GENODIVE                 0.965324           0.998345 ## HIERFSTAT                0.973732           0.996752 ## STAMPP                   0.973953           0.996729 ## STRATAG                  0.973953           0.996729 ## SNPRELATE_MEAN           1.000000           0.962916 ## SNPRELATE_WEIGHTED       0.962916           1.000000"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"generate-a-tibble-for-correlation-results","dir":"Articles > Web_only","previous_headings":"Comparisons > Empirical dataset","what":"Generate a tibble for correlation results","title":"Comparisons of Fst computations","text":"interesting results!","code":"library(dplyr) fst.corr.tibble <- radiator::distance2tibble(     x = fst.corr,      na.diag = TRUE,      relative = FALSE,      pop.levels = c(\"HIERFSTAT\", \"STRATAG\", \"ASSIGNER\", \"DIVERSITY\", \"STAMPP\", \"GENODIVE\", \"SNPRELATE_MEAN\", \"SNPRELATE_WEIGHTED\")) %>%       magrittr::set_colnames(x = ., value = c(\"ID1\", \"ID2\", \"CORRELATION\")) %>%    dplyr::arrange(dplyr::desc(CORRELATION)) fst.corr.tibble"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"figure-of-results","dir":"Articles > Web_only","previous_headings":"Comparisons > Empirical dataset","what":"Figure of results","title":"Comparisons of Fst computations","text":"Let’s plot results:","code":"library(dplyr) plot.fst <- fst.summary %>%    tidyr::unite(data = ., col = PAIRS, POP1, POP2, sep = \"-\") %>%    tidyr::gather(data = ., key = SOFTWARE, value = FST, -PAIRS) %>%    dplyr::mutate(     SOFTWARE = factor(       x = SOFTWARE,        levels = c(\"HIERFSTAT\", \"ASSIGNER\", \"STAMPP\", \"STRATAG\", \"DIVERSITY\", \"GENODIVE\", \"SNPRELATE_WEIGHTED\", \"SNPRELATE_MEAN\"), ordered = TRUE))  pairs.levels <- dplyr::group_by(plot.fst, PAIRS) %>%    dplyr::summarise(FST = mean(FST, na.rm = TRUE)) %>%    dplyr::arrange(FST) %$%    PAIRS under.the.sea.palette <- c(\"#1C2344\", \"#163D7D\", \"#118386\", \"#89D6D6\", \"#6E783D\", \"#FC564F\", \"#901546\", \"#FFD521\")#, \"#010101\") plot.fst %<>%    dplyr::mutate(PAIRS = factor(x = PAIRS, levels = pairs.levels, ordered = TRUE)) %>%    ggplot2::ggplot(data = ., ggplot2::aes(x = FST, y = PAIRS, colour = SOFTWARE)) +   ggplot2::geom_jitter(alpha = 0.8) +   ggplot2::scale_colour_manual(values = under.the.sea.palette)"},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"sim_01-high-fst","dir":"Articles > Web_only","previous_headings":"Comparisons > Simulated datasets","what":"sim_01: high Fst","title":"Comparisons of Fst computations","text":"Generate summary tibble: Generate correlation tibble:","code":"fst.summary.sim01<- suppressWarnings(   assigner.sim01.fst %>%     dplyr::full_join(diversity.sim01.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(genodive.sim01.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(hierfstat.sim01.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(stampp.sim01.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(stratag.sim01.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(snprelate.sim01.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::mutate_if(.tbl = ., .predicate = is.numeric, .funs = round, 4) ) fst.summary.sim01 <- readr::read_tsv(file = \"fst.summary.sim01.tsv\", col_types = \"ccnnnnnnnn\") fst.summary.sim01 ## # A tibble: 10 × 10 ##    POP1  POP2  ASSIGNER_SIM01 DIVERSITY_SIM01 GENODIVE_SIM01 HIERFSTAT_SIM01 ##    <chr> <chr>          <dbl>           <dbl>          <dbl>           <dbl> ##  1 POP_1 POP_2          0.514           0.514          0.514           0.514 ##  2 POP_1 POP_3          0.481           0.481          0.481           0.481 ##  3 POP_1 POP_4          0.425           0.425          0.425           0.425 ##  4 POP_1 POP_5          0.410           0.410          0.410           0.410 ##  5 POP_2 POP_3          0.412           0.412          0.412           0.412 ##  6 POP_2 POP_4          0.370           0.370          0.370           0.370 ##  7 POP_2 POP_5          0.360           0.360          0.360           0.360 ##  8 POP_3 POP_4          0.356           0.356          0.356           0.356 ##  9 POP_3 POP_5          0.341           0.341          0.341           0.341 ## 10 POP_4 POP_5          0.301           0.301          0.301           0.301 ## # ℹ 4 more variables: STAMPP_SIM01 <dbl>, STRATAG_SIM01 <dbl>, ## #   SNPRELATE_MEAN_SIM01 <dbl>, SNPRELATE_WEIGHTED_SIM01 <dbl> fst.corr.tibble.sim01 <- round(cor(x = dplyr::select(fst.summary.sim01, -POP1, -POP2)), 6) %>%   radiator::distance2tibble(   x = .,    na.diag = TRUE,    relative = FALSE,    pop.levels = c(\"HIERFSTAT_SIM01\", \"STRATAG_SIM01\", \"ASSIGNER_SIM01\", \"DIVERSITY_SIM01\", \"STAMPP_SIM01\", \"GENODIVE_SIM01\", \"SNPRELATE_MEAN_SIM01\", \"SNPRELATE_WEIGHTED_SIM01\")) %>%   magrittr::set_colnames(x = ., value = c(\"ID1\", \"ID2\", \"CORRELATION_SIM01\")) %>%    dplyr::arrange(dplyr::desc(CORRELATION_SIM01)) fst.corr.tibble.sim01"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"sim_02-low-fst","dir":"Articles > Web_only","previous_headings":"Comparisons > Simulated datasets","what":"sim_02: low Fst","title":"Comparisons of Fst computations","text":"Generate summary tibble: Generate correlation tibble:","code":"fst.summary.sim02<- suppressWarnings(   assigner.sim02.fst %>%     dplyr::full_join(diversity.sim02.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(genodive.sim02.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(hierfstat.sim02.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(stampp.sim02.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(stratag.sim02.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::full_join(snprelate.sim02.fst, by = c(\"POP1\", \"POP2\")) %>%      dplyr::mutate_if(.tbl = ., .predicate = is.numeric, .funs = round, 4) ) fst.summary.sim02 <- readr::read_tsv(file = \"fst.summary.sim02.tsv\", col_types = \"ccnnnnnnnn\") fst.summary.sim02 ## # A tibble: 10 × 10 ##    POP1  POP2  ASSIGNER_SIM02 DIVERSITY_SIM02 GENODIVE_SIM02 HIERFSTAT_SIM02 ##    <chr> <chr>          <dbl>           <dbl>          <dbl>           <dbl> ##  1 POP_1 POP_2         0.001           0.001          0.001           0.001  ##  2 POP_1 POP_3         0.0032          0.0032         0.0032          0.0032 ##  3 POP_1 POP_4         0.0021          0.0021         0.0021          0.0021 ##  4 POP_1 POP_5         0.0022          0.0022         0.0022          0.0022 ##  5 POP_2 POP_3         0.0001          0.0001         0.0001          0.0001 ##  6 POP_2 POP_4         0.0002          0.0002         0.0002          0.0002 ##  7 POP_2 POP_5         0.0005          0.0005         0.0005          0.0005 ##  8 POP_3 POP_4         0              -0.0006        -0.0006         -0.0006 ##  9 POP_3 POP_5         0.0028          0.0028         0.0028          0.0028 ## 10 POP_4 POP_5         0.0017          0.0017         0.0017          0.0017 ## # ℹ 4 more variables: STAMPP_SIM02 <dbl>, STRATAG_SIM02 <dbl>, ## #   SNPRELATE_MEAN_SIM02 <dbl>, SNPRELATE_WEIGHTED_SIM02 <dbl> fst.corr.tibble.sim02 <- round(cor(x = dplyr::select(fst.summary.sim02, -POP1, -POP2)), 6) %>%   radiator::distance2tibble(   x = .,    na.diag = TRUE,    relative = FALSE,    pop.levels = c(\"HIERFSTAT_SIM02\", \"STRATAG_SIM02\", \"ASSIGNER_SIM02\", \"DIVERSITY_SIM02\", \"STAMPP_SIM02\", \"GENODIVE_SIM02\", \"SNPRELATE_MEAN_SIM02\", \"SNPRELATE_WEIGHTED_SIM02\")) %>%   magrittr::set_colnames(x = ., value = c(\"ID1\", \"ID2\", \"CORRELATION_SIM02\")) %>%    dplyr::arrange(dplyr::desc(CORRELATION_SIM02)) fst.corr.tibble.sim02"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"table-of-features","dir":"Articles > Web_only","previous_headings":"","what":"Table of features","title":"Comparisons of Fst computations","text":"table timing produced using empirical dataset. Note: VCFtools: used 2 populations timing inside VCFtools , doesn’t account manipulations output. SNPRelate: ---box pairwise Fst analysis, quick solution proposed vignette.","code":"summary.table <- readr::read_tsv(file = \"fst_comparisons_packages_features.tsv\", col_types = readr::cols(.default = readr::col_character())) knitr::kable(summary.table) %>%    kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), full_width = FALSE)"},{"path":"https://thierrygosselin.github.io/assigner/articles/web_only/fst_comparisons.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"Comparisons of Fst computations","text":"go look 36 pairwise comparisons, end story simple: Fst, ’m definitely staying away VCFtools SNPRelate MeanFst. SNPRelate MeanFst systematic downward bias weighted estimate usually little higher. Empirical simulated data: assigner hierfstat equal values large number decimals! contrary empirical data, simulated data packages results. missing data probably stats driving differences. assigner hierfstat show consistent behaviors presence missing data. high low Fst simulated data: doesn’t impact packages. assigner different others: transform - Fst 0. worth exploring impact missing data patterns level missingness Fst calculations… absence missing data, overall Fst values similar, end, ’s worth looking : speed: issue (e.g. running multiple simulations, assignment analysis, etc). features: lots differences packages/software. Please let know something wrong forgot mention interesting feature favorite package.","code":""},{"path":"https://thierrygosselin.github.io/assigner/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thierry Gosselin. Author, maintainer. Eric C. Anderson. Contributor.","code":""},{"path":"https://thierrygosselin.github.io/assigner/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gosselin, T, Anderson, E. C., Bradbury, . (2020). assigner: Assignment Analysis GBS/RAD Data using R. R package version 0.5.8. http://thierrygosselin.github.io/assigner/. doi : 10.5281/zenodo.592677","code":"@Manual{,   title = {assigner: Assignment Analysis with GBS/RAD Data using R},   year = {2020},   author = {Thierry Gosselin},   url = {https://github.com/thierrygosselin/assigner},   doi = {10.5281/zenodo.592677}, }"},{"path":"https://thierrygosselin.github.io/assigner/index.html","id":"assigner-","dir":"","previous_headings":"","what":"Assignment Analysis with RADseq Data","title":"Assignment Analysis with RADseq Data","text":"name assigner |əˈsʌɪn| rooted Latin word assignare. first use French dates back XIIIe. logo, inspired Northern Atlantic Octupus. fortunate spend lot times one PhD. incredible creatures 8 arms thousands suckers can control independently. Octopus really best multitaskers. logo designed artist Claude Thivierge. Genomic datasets produced next-generation sequencing techniques reduce size genome (e.g. genotype--sequencing (GBS) restriction-site-associated DNA sequencing (RADseq)) huge number markers hold great potential promises assignment analysis. hitting bioinformatic wall different workflow, ’ll likely end several folders containing whitelist blacklist markers individuals, data sets various de novo /filtering parameters … missing data. reality GBS/RADseq data quite hard GUI software traditionally used population assignment analysis. end results usually poor data exploration, constrained time, poor reproducibility. assigner tailored make easy conduct population assignment analysis using GBS/RADseq data within R. Additionally, combining use tools like R Notebook, RStudio GitHub make effortless documenting workflows pipelines. keywords remember: 3 differents algorithms implemented: frequentist, likelihood machine learning cross-validation techniques: classic Leave-One-(LOO) Training, Holdout, Leave-one-(THL) marker selection resampling/bootstrap/subsampling fast Fst WC84 implementation) ggplot2-based plotting! https://thierrygosselin.github.io/assigner/","code":""},{"path":"https://thierrygosselin.github.io/assigner/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Assignment Analysis with RADseq Data","text":"try dev version assigner: plan using gsi_sim inside assigner, need additional step: UNIX PC web site additional info: https://thierrygosselin.github.io/assigner/ Computer setup - installation - troubleshooting assigner’s assumptions assigner’s features Function’s documentation Vignettes cite assigner: inside R type citation(\"assigner\")","code":"if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"thierrygosselin/assigner\") library(assigner) assigner::install_gsi_sim(fromSource = TRUE) assigner::install_gsi_sim()"},{"path":"https://thierrygosselin.github.io/assigner/index.html","id":"life-cycle","dir":"","previous_headings":"","what":"Life cycle","title":"Assignment Analysis with RADseq Data","text":"assigner maturing, order make package better, changes inevitable. Experimental functions change, argument names change. codes workflows might break time time assigner stable. Consequently, depending tolerance change, assigner might . Philosophy, major changes deprecated functions/arguments documented life cycle section functions. latest changes documented () changelog, versions, new features bug history issues contributions","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/Exposition_pipe_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposition pipe-operator — %$%","title":"Exposition pipe-operator — %$%","text":"magrittr Exposition pipe-operator","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/Exposition_pipe_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposition pipe-operator — %$%","text":"","code":"lhs %$% rhs"},{"path":"https://thierrygosselin.github.io/assigner/reference/assign_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"assign_defaults — assign_defaults","title":"assign_defaults — assign_defaults","text":"Assign default values ...","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assign_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign_defaults — assign_defaults","text":"","code":"assign_defaults(n, env.arg, verbose = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner_dots — assigner_dots","title":"assigner_dots — assigner_dots","text":"Extract assign dots-dots-dots Capture assign `...` arguments robust tidy way. utility function: - Assigns known `...` arguments (called \"keepers\") function's environment. - Detects warns unknown deprecated arguments. - Assigns default values expected `...` arguments supplied. - Logs everything tidy tibble grouped type. Especially useful deeply nested extensible functions (e.g., pipelines packages). Includes `dev.mode` flag allow testing global environment interactively.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner_dots — assigner_dots","text":"","code":"assigner_dots(   func.name = as.list(sys.call())[[1]],   fd = NULL,   args.list = NULL,   dotslist = NULL,   keepers = c(\"subsample.markers.stats\", \"force.stats\", \"id.stats\", \"subsample\",     \"filter.reproducibility\", \"filter.individuals.missing\",     \"filter.individuals.heterozygosity\", \"filter.individuals.coverage.total\",     \"filter.individuals.coverage.median\", \"filter.individuals.coverage.iqr\",     \"filter.common.markers\", \"filter.monomorphic\", \"filter.mac\", \"filter.coverage\", \"dp\",     \"filter.genotyping\", \"filter.snp.position.read\", \"filter.snp.number\",     \"filter.short.ld\", \"filter.long.ld\", \"long.ld.missing\", \"ld.method\", \"ld.figures\",           \"detect.mixed.genomes\", \"ind.heterozygosity.threshold\",     \"detect.duplicate.genomes\", \"filter.hwe\", \"filter.strands\", \"random.seed\",     \"path.folder\", \"filename\", \"parameters\", \"blacklist.genotypes\", \"erase.genotypes\",     \"pop.levels\", \"pop.labels\", \"pop.select\", \"blacklist.id\", \"markers.info\",     \"keep.allele.names\", \"keep.gds\", \"vcf.metadata\", \"vcf.stats\", \"wide\",     \"whitelist.markers\", \"write.tidy\", \"missing.memory\", \"dart.sequence\", \"internal\",     \"tidy.check\", \"tidy.vcf\", \"tidy.dart\", \"gt\", \"gt.bin\", \"gt.vcf\",       \"gt.vcf.nuc\",     \"calibrate.alleles\", \"forking\"),   deprecated = NULL,   verbose = TRUE,   dev.mode = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assigner_dots — assigner_dots","text":"func.name name function calling `assigner_dots`. Default: .list(sys.call())[[1]]. fd (optional) character vector formal argument names calling function. Default: rlang::fn_fmls_names(). args.list (optional) named list arguments already present calling function's environment. Default:args.list = .list(environment()). dotslist captured `...` using `rlang::dots_list(...)`. Default:  dotslist = rlang::dots_list(..., .homonyms = \"error\", .check_assign = TRUE). keepers (optional) character vector allowed dot arguments assigned. Default: keepers = c( \"subsample.markers.stats\", \"subsample\", \"filter.reproducibility\", \"filter.individuals.missing\", \"filter.individuals.heterozygosity\", \"filter.individuals.coverage.total\", \"filter.individuals.coverage.median\", \"filter.individuals.coverage.iqr\", \"filter.common.markers\", \"filter.monomorphic\", \"filter.mac\", \"filter.coverage\", \"filter.genotyping\", \"filter.snp.position.read\", \"filter.snp.number\", \"filter.short.ld\", \"filter.long.ld\", \"long.ld.missing\", \"ld.method\", \"detect.mixed.genomes\", \"ind.heterozygosity.threshold\", \"detect.duplicate.genomes\", \"filter.hwe\", \"filter.strands\", \"random.seed\", \"path.folder\", \"filename\", \"blacklist.genotypes\", \"erase.genotypes\", \"gt\", \"gt.bin\", \"gt.vcf\", \"gt.vcf.nuc\", \"pop.levels\", \"pop.labels\", \"pop.select\", \"blacklist.id\", \"markers.info\", \"keep.allele.names\", \"keep.gds\", \"vcf.metadata\", \"vcf.stats\", \"id.stats\", \"dp\", \"whitelist.markers\", \"write.tidy\", \"dart.sequence\", \"missing.memory\", \"internal\", \"tidy.check\", \"tidy.vcf\", \"tidy.dart\", \"calibrate.alleles\", \"forking\" ). deprecated (optional) Vector deprecated argument names detect `...`. Default: deprecated = NULL. verbose (logical) Function output details. print messages describing assignments issues. Default: verbose = TRUE. dev.mode (logical) `TRUE`, arguments assigned global environment (`globalenv()`) interactive development testing. Default: dev.mode = FALSE.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assigner_dots — assigner_dots","text":"`tibble` columns `ARGUMENTS`, `VALUES`, `GROUPS`, indicating dot-argument handled:   - `\"fct.call.args\"`: named arguments function call   - `\"fct.call...\"`: valid dot arguments passed   - `\"default...\"`: valid dot arguments passed (defaults assigned)   - `\"deprecated...\"`: deprecated arguments passed   - `\"unknowned...\"`: unknown arguments passed","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_fst_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner_fst_stats — assigner_fst_stats","title":"assigner_fst_stats — assigner_fst_stats","text":"Generate useful stats","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_fst_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner_fst_stats — assigner_fst_stats","text":"","code":"assigner_fst_stats(   x,   v,   group.by = NULL,   outliers = FALSE,   overall = FALSE,   keep.groups = \"drop\",   digits = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_function_header.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner_function_header — assigner_function_header","title":"assigner_function_header — assigner_function_header","text":"Generate function header","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_function_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner_function_header — assigner_function_header","text":"","code":"assigner_function_header(f.name = NULL, start = TRUE, verbose = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_future.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner parallel function — assigner_future","title":"assigner parallel function — assigner_future","text":"Updating assigner use future","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner parallel function — assigner_future","text":"","code":"assigner_future(   .x,   .f,   flat.future = c(\"int\", \"chr\", \"dfr\", \"dfc\", \"walk\", \"drop\"),   split.vec = FALSE,   split.with = NULL,   split.chunks = 4L,   parallel.core = parallel::detectCores() - 1,   forking = FALSE,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner_stats — assigner_stats","title":"assigner_stats — assigner_stats","text":"assigner_stats","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner_stats — assigner_stats","text":"","code":"assigner_stats(x)"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_tic.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner_tic — assigner_tic","title":"assigner_tic — assigner_tic","text":"assigner tictoc function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_tic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner_tic — assigner_tic","text":"","code":"assigner_tic(timing = proc.time())"},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"assigner_toc — assigner_toc","title":"assigner_toc — assigner_toc","text":"assigner tictoc function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assigner_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assigner_toc — assigner_toc","text":"","code":"assigner_toc(   timing,   end.message = \"Computation time, overall:\",   verbose = TRUE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_adegenet.html","id":null,"dir":"Reference","previous_headings":"","what":"assignment with adegenet — assignment_adegenet","title":"assignment with adegenet — assignment_adegenet","text":"assignment adegenet","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_adegenet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignment with adegenet — assignment_adegenet","text":"","code":"assignment_adegenet(   data = NULL,   select.markers = NULL,   adegenet.dapc.opt = \"optim.a.score\",   adegenet.n.rep = 30,   adegenet.training = 0.9,   i = NULL,   m = NULL,   holdout = NULL,   markers.sampling = \"random\",   thl = 1,   subsample.id = NULL,   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_gsi_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"assignment with gsi_sim — assignment_gsi_sim","title":"assignment with gsi_sim — assignment_gsi_sim","text":"assignment gsi_sim","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_gsi_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignment with gsi_sim — assignment_gsi_sim","text":"","code":"assignment_gsi_sim(   input = NULL,   strata = NULL,   select.markers = NULL,   i = NULL,   m = NULL,   holdout = NULL,   filename = NULL,   i.folder = NULL,   keep.gsi.files = FALSE,   markers.sampling = \"random\",   thl = 1 )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_marker_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"assignment_marker_loop — assignment_marker_loop","title":"assignment_marker_loop — assignment_marker_loop","text":"assignment_marker_loop","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_marker_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignment_marker_loop — assignment_marker_loop","text":"","code":"assignment_marker_loop(   m,   assignment.analysis = \"gsi_sim\",   fst.ranked = NULL,   i = NULL,   input = NULL,   genind.object = NULL,   strata = NULL,   markers.sampling = NULL,   subsample.id = NULL,   holdout = NULL,   thl = 1,   adegenet.dapc.opt = NULL,   adegenet.n.rep = NULL,   adegenet.training = NULL,   i.folder = NULL,   filename = NULL,   keep.gsi.files = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment analysis tailored for RADseq data — assignment_ngs","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"arguments assignment_ngs function tailored reality RADseq data assignment analysis maintaining reproducible workflow. Assignment assumptions listed section . Input file: various file format supported (see data argument ). Cross-Validations: Markers can randomly selected classic LOO (Leave-One-)   assignment chosen based ranked Fst thl   (Training, Holdout, Leave-one-) assignment analysis. Assignment analysis: conducted   gsi_sim, tool   simulating genetic stock identification   developed Eric C. Anderson,   adegenet,  R package developed Thibaul Jombart. Parallel: assignment can conduncted multiple CPUs.   R GUI unstable functions, recommend using   RStudio.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"","code":"assignment_ngs(   data,   strata = NULL,   pop.levels = NULL,   assignment.analysis = c(\"gsim_sim\", \"adegenet\"),   markers.sampling = c(\"ranked\", \"random\"),   marker.number = \"all\",   thl = 1,   iteration.method = 10,   subsample = NULL,   iteration.subsample = 1,   verbose = TRUE,   parallel.core = parallel::detectCores() - 1,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"data Several input format accepted. assigner uses radiator tidy_genomic_data module import data. See function documentation details. strata (optional) strata file tab delimited file minimum 2 columns headers: INDIVIDUALS STRATA. Documented read_strata. DArT data: third column TARGET_ID required. Documented read_dart. Also use strata read function blacklist individuals. Default: strata = NULL. pop.levels (optional, string) refers levels factor. case, id pop. Use argument pop ordered way instead default alphabetical numerical order. e.g. pop.levels = c(\"QUE\", \"ONT\", \"ALB\") instead default pop.levels = c(\"ALB\", \"ONT\", \"QUE\"). White spaces population names replaced underscore. Default: pop.levels = NULL. assignment.analysis (character) Assignment analysis conducted assignment.analysis = \"gsi_sim\" assignment.analysis = \"adegenet\". See Details section installing gsi_sim. markers.sampling (character) 2 options markers selection: markers.sampling == \"random\" subset markers selected randomly, classic Leave-One-(LOO) assignment. markers.sampling == \"ranked\" subset markers first ranked based overall decreasing Fst values. Fst computed fst_WC84 function, uses fast implementation Weir Cockerham 1984 Fst/Theta equations. selection method used Training-Holdout-Leave One (thl) assignment. many markers selected controlled argument thl. marker.number (Integer string number \"\") assignment analysis can use markers (default) subset markers. e.g. test 500, 1000, 2000 markers: marker.number = c(500, 1000, 2000, \"\"). use 500 makers marker.number = 500. markers sampled determined argument markers.sampling, next. Default = marker.number = \"\". thl (character, integer, proportion) markers.sampling = \"ranked\" . Several options available: thl = 1: 1 individual sample used holdout. individual participating markers ranking. marker number, analysis repeated indiviuals data set (e.g. 500 individuals, 500 times 500, 1000, 2000 markers). default. proportion: e.g. thl = 0.15, 15 percent individuals, strata, chosen randomly holdout individuals. thl = \"\": individuals used ranking (good) argument iteration.method = 1 set default. testing . Different lists holdout individuals generated argument iteration.method (bootstrap) used. iteration.method (integer) random markers selection method, iterations argument = number iterations repeat marker resampling. Default: iteration.method = 10. marker.number = c(500, 1000) default iterations setting, 500 markers randomly chosen 10 times 1000 markers randomly chosen 10 times. Notes: markers used, marker.number = \"\" series marker number groupings marker.number = c(200, 500, \"\"), number iteration automatically set 1. remaining groupings unaffected. ranked makers selection method, using thl = 1, analysis repeated individuals data set every marker.number selected. proportion argument thl = 0.15, 15 percent individuals populations chosen randomly holdout individuals process reapeated number times chosen iteration.method value. subsample (Integer Character, optional) argument subsample individuals. subsample = 36, 36 individuals populations chosen randomly represent dataset. integer smaller population min sample size, higher, minimum sample size found data used default. doubt, use subsample = \"min\", function use smallest population sample size found data. number times process repeated controlled argument iteration.subsample. Default: subsample = NULL (subsampling). iteration.subsample (Integer) number iterations repeat subsampling individuals. subsample = 20 iteration.subsample = 10, 20 individuals/populations randomly chosen 10 times. Default: iteration.subsample = 1. verbose (optional, logical) verbose = TRUE function little chatty execution. Default: verbose = TRUE. parallel.core (optional) number core used parallel execution import. Default: parallel.core = parallel::detectCores() - 1. ... (optional) pass argument fine-tuning function (see advanced section ).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Depending arguments selected, several folders files written: 01_radiator_tidy_genomic result importing data radiator import module tidy_genomic_data. assigner_assignment_ngs_args_date@time.tsv: reproducibility, function call, arguments values used along default arguments. assignment.plot.pdf: assignment figure. assignment.results.summary.stats.tsv: tibble summarized assignment statistics. assignment.ranked.results.summary.stats..subsamples.tsv: subsampling used, file contains raw results subsample summarizing. THL: Training, Holdout, Leave-one-: Intermediate files written, can inspect specific iterations /subsample: assignment.ranked.results.iterations.raw.tsv: tibble raw intermediate results iterations. assignment.ranked.results.iterations.summary.tsv: tibble intermediate summary iterations. holdout.individuals.tsv: tibble holdout individuals associated iteration random seed number. LOO: Leave-one-: Intermediate files written, can inspect specific iterations /subsample: assignment.random.results.iterations.raw.tsv: tibble raw intermediate results iterations. markers.random.tsv: tibble random markers selected iteration associated random seed number. Folders names different iterations starting assignment_i contains: assignment_i.tsv: assignment result, iteration. fst.ranked_i.tsv: THL method, ranked Fst per markers, iteration. gsi_sim_seeds: gsi_sim random seeds program used, iteration. output global environment list. view assignment results $assignment view ggplot2 figure $assignment.plot. See example .","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Using gsi_sim: assignment_ngs assumes command line version gsi_sim properly installed file.path(system.file(package = \"assigner\"), \"bin\", \"gsi_sim\"). Things set try running gsi_sim, find , program throw error ask user run install_gsi_sim best put usable copy gsi_sim needed. , must connected internet. work, need compile program , get , manually copy file.path(system.file(package = \"assigner\"), \"bin\", \"gsi_sim\"). compile gsi_sim, follow instruction : https://github.com/eriqande/gsi_sim.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"advance-mode","dir":"Reference","previous_headings":"","what":"Advance mode","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Ideally, forget section. advance users, dots-dots-dots ... can pass several arguments fine-tuning function: adegenet.dapc.opt (optional, character) Argument available using: assignment.analysis = \"adegenet\" markers.sampling == \"random\". assignment using dapc can use optimized alpha score adegenet.dapc.opt == \"optim..score\" cross-validation adegenet.dapc.opt == \"xval\" stability group membership probabilities. fine tuning trade-power discrimination -fitting. See adegenet documentation details. adegenet.dapc.opt == \"xval\" work missing data, available full dataset imputed dataset. non imputed data default: adegenet.dapc.opt == \"optim..score\". adegenet.n.rep: (optional, integer) adegenet.dapc.opt == \"xval\", number replicates carried level PC retention. Default: adegenet.n.rep = 30. See adegenet documentation details. adegenet.training: (optional, numeric) adegenet.dapc.opt == \"xval\", proportion data (individuals) used training set. Default: adegenet.training = 0.9, groups >= 10 members. Otherwise, training.set scales automatically largest proportion still ensures groups present training validation sets. See adegenet documentation details. folder: (optional) name folder created working directory save files/results. Default: folder = NULL create folder data time. filename: (optional) name file written directory. Use extension \".txt\" end. Several info appended name file. Default assignment_data.txt. keep.gsi.files: (logical, optional) default, intermediate input output gsi_sim files deleted directory finished processing. decide keep files, keep.gsi.files = TRUE, remember allocate large chunk disk space analysis. Default: keep.gsi.files = FALSE random.seed: (integer, optional) reproducibility, set integer used inside function requires randomness. default, random number generated printed appropriate output. Default: random.seed = NULL. full.y.range: (logical, optional) default y axis print min max values determied  automatically data. might usefull see full range scale 0 100, case use full.y.range = TRUE. can also modified running analysis. See example . Default: full.y.range = FALSE.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"assumptions","dir":"Reference","previous_headings":"","what":"Assumptions","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Individuals QC: Bad individual QC bias assignment results. remove duplicates samples:  found within strata, duplicates generate false population signal, found strata (yes, seen ), generating noise core population signal diluted. remove individual outlier heterozygosity:  unchecked, outlier individuals based heterozygosity generate false population signal sample lower heterozygosity match several strata (week assignment) sample higher heterozygosity. remove individuals many missing:  individuals exacerbate dilute signal, depending correlation heterozygosity presence pattern missingness. Markers QC: Bad markers QC bias assignment results. low MAC: improper Minor Allele Count filtering generate noise. LOO THL methods, removes samples model construction, MAC low, population core signature greatly impacted iteration. Linkage disequilibrium: remove highly linked markers. HWE: remove markers strong Hardy-Weinberg disequilibrium likely artefactual /genotyping errors. Strata: bad K selection result poor assingment results. filtered data: expect filter data . radiator designed , filter_rad handle issues mentioned . default, function remove monomorphic markers keep markers common strata.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"life-cycle","dir":"Reference","previous_headings":"","what":"Life cycle","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Map-independent imputation missing genotype avaible R package called grur. Use grur : Visualize missing data:  imputing genotypes, visualize missing data. Several visual tools available inside grur help decide best strategy . Optimize:  use grur imputation module functions optimize imputations dataset. need test arguments. Failing conduct tests adjust imputations arguments generate artifacts /exacerbate bias. Using defaults optional ... genomic_converter:  use output argument inside grur imputation module generate required formats assigner (e.g. tidy dataset) Deprecated arguments: sampling.method: renamed markers.sampling.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Anderson, Eric C., Robin S. Waples, Steven T. Kalinowski. (2008) improved method predicting accuracy genetic stock identification. Canadian Journal Fisheries Aquatic Sciences 65, 7:1475-1486. Anderson, E. C. (2010) Assessing power informative subsets loci population assignment: standard methods upwardly biased. Molecular ecology resources 10, 4:701-710. Weir BS, Cockerham CC (1984) Estimating F-Statistics Analysis Population Structure. Evolution, 38, 1358–1370. Jombart T, Devillard S, Balloux F. Discriminant analysis principal components: new method analysis genetically structured populations. BMC Genet. 2010:11: 94. doi:10.1186/1471-2156-11-94 Jombart T, Ahmed . adegenet 1.3-1: new tools analysis genome-wide SNP data. Bioinformatics. 2011:27: 3070–3071. doi:10.1093/bioinformatics/btr521","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"Thierry Gosselin thierrygosselin@icloud.com Eric C. Anderson","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ngs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assignment analysis tailored for RADseq data — assignment_ngs","text":"","code":"if (FALSE) { # \\dontrun{ assignment.treefrog <- assignment_ngs(  data = \"batch_1.vcf\",  strata = \"strata.treefrog.tsv\",  assignment.analysis = \"gsi_sim\",  marker.number = c(500, 5000, \"all\"),  markers.sampling = \"ranked\",  thl = 0.3  )  # To create a dataframe with the assignment results:    assignment <- assignment.treefrog$assignment  # To plot the assignment using ggplot2 and facet    fig <- assignment.treefrog$assignment.plot  # To view the full range of y values = Assignment success(%):    fig + ggplot2::scale_y_continuous(limits = c(0,100))   # Or use the ... argument: full.y.range = TRUE } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_random.html","id":null,"dir":"Reference","previous_headings":"","what":"assignment_random — assignment_random","title":"assignment_random — assignment_random","text":"assignment_random","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignment_random — assignment_random","text":"","code":"assignment_random(   x,   assignment.analysis = \"gsi_sim\",   input = NULL,   genind.object = NULL,   strata = NULL,   directory.subsample = NULL,   keep.gsi.files = FALSE,   markers.sampling = \"random\",   subsample.id = NULL,   filename = NULL,   adegenet.n.rep = 30,   adegenet.training = 0.9,   holdout = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"assignment_ranking — assignment_ranking","title":"assignment_ranking — assignment_ranking","text":"assignment_ranking","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignment_ranking — assignment_ranking","text":"","code":"assignment_ranking(   iterations.list = NULL,   thl = NULL,   input = NULL,   holdout.individuals = NULL,   directory.subsample = NULL,   marker.number = NULL,   assignment.analysis = NULL,   genind.object = NULL,   strata = NULL,   markers.sampling = NULL,   subsample.id = NULL,   adegenet.dapc.opt = NULL,   adegenet.n.rep = NULL,   adegenet.training = NULL,   filename = NULL,   keep.gsi.files = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_subsamples.html","id":null,"dir":"Reference","previous_headings":"","what":"assignment_subsamples — assignment_subsamples","title":"assignment_subsamples — assignment_subsamples","text":"assignment_subsamples","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/assignment_subsamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignment_subsamples — assignment_subsamples","text":"","code":"assignment_subsamples(   x,   input = NULL,   subsample = NULL,   assignment.analysis = \"gsi_sim\",   marker.number = NULL,   markers.sampling = \"random\",   iteration.method = 10,   filename = \"assignment_data.txt\",   directory = NULL,   keep.gsi.files = FALSE,   verbose = FALSE,   parallel.core = parallel::detectCores() - 1,   random.seed = NULL,   base.filename = NULL,   thl = 1,   adegenet.dapc.opt = NULL,   adegenet.n.rep = NULL,   adegenet.training = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/boot_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"boot_ci — boot_ci","title":"boot_ci — boot_ci","text":"Confidence interval function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/boot_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"boot_ci — boot_ci","text":"","code":"boot_ci(x, fst.prep, digits = 9)"},{"path":"https://thierrygosselin.github.io/assigner/reference/boot_ci_nei.html","id":null,"dir":"Reference","previous_headings":"","what":"boot_ci_nei — boot_ci_nei","title":"boot_ci_nei — boot_ci_nei","text":"Confidence interval function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/boot_ci_nei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"boot_ci_nei — boot_ci_nei","text":"","code":"boot_ci_nei(x = NULL, fst.data = NULL, digits = 9)"},{"path":"https://thierrygosselin.github.io/assigner/reference/change_matrix_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"change_matrix_strata — change_matrix_strata","title":"change_matrix_strata — change_matrix_strata","text":"Integrate strata info back matrix","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/change_matrix_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"change_matrix_strata — change_matrix_strata","text":"","code":"change_matrix_strata(x, s)"},{"path":"https://thierrygosselin.github.io/assigner/reference/check_args_class.html","id":null,"dir":"Reference","previous_headings":"","what":"check_args_class — check_args_class","title":"check_args_class — check_args_class","text":"Check class argument/parameter value","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/check_args_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_args_class — check_args_class","text":"","code":"check_args_class(x)"},{"path":"https://thierrygosselin.github.io/assigner/reference/clean_marker_number.html","id":null,"dir":"Reference","previous_headings":"","what":"clean_marker_number — clean_marker_number","title":"clean_marker_number — clean_marker_number","text":"clean_marker_number","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/clean_marker_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean_marker_number — clean_marker_number","text":"","code":"clean_marker_number(x, unique.markers)"},{"path":"https://thierrygosselin.github.io/assigner/reference/compound_assignment_pipe_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"compound assignment pipe operator — %<>%","title":"compound assignment pipe operator — %<>%","text":"magrittr compound assignment pipe operator","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/compound_assignment_pipe_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compound assignment pipe operator — %<>%","text":"","code":"lhs %<>% rhs"},{"path":"https://thierrygosselin.github.io/assigner/reference/compute_fst.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_fst — compute_fst","title":"compute_fst — compute_fst","text":"main function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/compute_fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_fst — compute_fst","text":"","code":"compute_fst(   x,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   digits = 9,   path.folder = NULL,   plot.fst = TRUE,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/compute_fst_nei.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_fst_nei — compute_fst_nei","title":"compute_fst_nei — compute_fst_nei","text":"fst function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/compute_fst_nei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_fst_nei — compute_fst_nei","text":"","code":"compute_fst_nei(   x,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   digits = 9 )"},{"path":"https://thierrygosselin.github.io/assigner/reference/create_subsample_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of subsampled individuals — create_subsample_list","title":"Create a list of subsampled individuals — create_subsample_list","text":"Generate list subsampled individuals strata replicated subsampling. Optionally writes output file.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/create_subsample_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of subsampled individuals — create_subsample_list","text":"","code":"create_subsample_list(   subsample,   strata.bk,   iteration.subsample,   path.folder = NULL,   verbose = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/create_subsample_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of subsampled individuals — create_subsample_list","text":"subsample Integer `\"min\"`: number individuals subsample per stratum, `\"min\"` use minimum stratum size. Default: NULL. strata.bk tibble original strata information, STRATA_SEQ grouping column. iteration.subsample Number subsampling replicates. Default: 1L. path.folder Path directory subsample individuals file written. Default: NULL. verbose (logical) Show messages execution. Default: FALSE.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/create_subsample_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of subsampled individuals — create_subsample_list","text":"list tibbles, containing subsampled individuals one iteration.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset to test assigner — data_assigner_sim_01","title":"Simulated dataset to test assigner — data_assigner_sim_01","text":"dataset genotypes containing 500 bi-allelic SNPs, simulated 250 individuals, 5 populations.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset to test assigner — data_assigner_sim_01","text":"","code":"data_assigner_sim_01"},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_01.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset to test assigner — data_assigner_sim_01","text":"tibble 125000 rows (genotypes) 4 variables: MARKERS SNPs markers POP_ID Populations/strata samples INDIVIDUALS Samples id) GT Genotypes coded la genepop format","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_01.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated dataset to test assigner — data_assigner_sim_01","text":"data simulated grur https://thierrygosselin.github.io/grur/reference/simulate_rad.html","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_01.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated dataset to test assigner — data_assigner_sim_01","text":"Dataset simulation caracteristics: num.pops: 5 num.loci: 1000 div.time: 25e3 ne: 200 nm: 0.5 theta: 0.2 mig.type: island mut.rate: 2.5e-4 mig.rate: 0.0025 simulated dataset, 500 SNPs 250 individuals (50 ind/pop) randomly selected.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset to test assigner — data_assigner_sim_02","title":"Simulated dataset to test assigner — data_assigner_sim_02","text":"dataset genotypes containing 500 bi-allelic SNPs, simulated 250 individuals, 5 populations.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset to test assigner — data_assigner_sim_02","text":"","code":"data_assigner_sim_02"},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_02.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset to test assigner — data_assigner_sim_02","text":"tibble 125000 rows (genotypes) 4 variables: MARKERS SNPs markers POP_ID Populations/strata samples INDIVIDUALS Samples id GT Genotypes coded la genepop format","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_02.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated dataset to test assigner — data_assigner_sim_02","text":"data simulated grur https://thierrygosselin.github.io/grur/reference/simulate_rad.html","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/data_assigner_sim_02.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated dataset to test assigner — data_assigner_sim_02","text":"Dataset simulation caracteristics: num.pops: 5 num.loci: 1000 div.time: 25e3 ne: 200 nm: 0.5 theta: 0.2 mig.type: island mut.rate: 2.5e-4 mig.rate: 0.0025 simulated dataset, 500 SNPs 250 individuals (50 ind/pop) randomly selected.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Genotype likelihood ratio distance (Dlr) — dlr","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"function computes Paetkau's et al. (1997) genotype likelihood ratio distance (Dlr).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"","code":"dlr(   data,   strata,   plots = FALSE,   filename = NULL,   parallel.core = parallel::detectCores() - 1 )"},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"data output assignment file (home likelihood likelihood ratio statistics) GENODIVE. strata tab delimited file 2 columns header: INDIVIDUALS STRATA. STRATA column used populations id sample. plots (optional) Generate Dlr plots pairwise populations dataset. plots ggplot2 objects can modified proper ggplot2 syntax. Default: plots = FALSE. filename (optional) Name file prefix matrix table written working directory. parallel.core (optional) number core parallel computation. Default: parallel.core = parallel::detectCores() - 1.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"list 5 objects: assignment results ($assignment), dlr pairwise table ($dlr.table), lower diagonal dlr distance matrix ($dlr.dist), data.frame dlr distance mirrored ($dlr.matrix), list dlr plots ($dlr.plots)","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"Paetkau D, Slade R, Burden M, Estoup (2004) Genetic assignment methods direct, real-time estimation migration rate: simulation-based exploration accuracy power. Molecular Ecology, 13, 55-65. Paetkau D, Waits LP, Clarkson PL, Craighead L, Strobeck C (1997)  empirical evaluation genetic distance statistics using microsatellite   data bear (Ursidae) populations. Genetics, 147, 1943-1957. Meirmans PG, Van Tienderen PH (2004) genotype genodive: two programs analysis genetic diversity asexual organisms. Molecular Ecology Notes, 4, 792-794.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"Thierry Gosselin thierrygosselin@icloud.com","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genotype likelihood ratio distance (Dlr) — dlr","text":"","code":"if (FALSE) { # \\dontrun{ dlr <- assigner::dlr( data = \"assignment.gdv\", strata = \"my.strata.tsv\", plots = TRUE)  # to get the plots list: plot.list <- dlr$dlr.plots # access and isolate in different object a plot with $ } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr_relative.html","id":null,"dir":"Reference","previous_headings":"","what":"dlr_relative — dlr_relative","title":"dlr_relative — dlr_relative","text":"Calculate relative Dlr 2 pops","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/dlr_relative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dlr_relative — dlr_relative","text":"","code":"dlr_relative(data, pop1, pop2)"},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_dots — extract_dots","title":"extract_dots — extract_dots","text":"Extract Assign ...","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_dots — extract_dots","text":"","code":"extract_dots(n, v, env.arg, verbose = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_matching_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract arguments matching a function's formals — extract_matching_args","title":"Extract arguments matching a function's formals — extract_matching_args","text":"Extracts named arguments environment (e.g., calling environment) match formal arguments target function. Useful forwarding arguments parent function subfunction without manually repeating parameter.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_matching_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract arguments matching a function's formals — extract_matching_args","text":"","code":"extract_matching_args(from.env, to.fn, .evaluate = TRUE, .exclude = NULL)"},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_matching_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract arguments matching a function's formals — extract_matching_args","text":".env environment extract arguments (typically `environment()` `rlang::caller_env()`). .fn target function whose formal arguments matched. .evaluate Logical, whether force evaluation (default: TRUE). .exclude Optional character vector argument names exclude.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_matching_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract arguments matching a function's formals — extract_matching_args","text":"named list matched evaluated arguments (excluding `.exclude`).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/extract_matching_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract arguments matching a function's formals — extract_matching_args","text":"","code":"if (FALSE) { # \\dontrun{ args.for.fst <- extract_matching_args(from.env = environment(), to.fn = assigner::compute_fst) result <- rlang::exec(assigner::compute_fst, x = my_data, !!!args.for.fst) } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/format_mean_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Format mean and range of numeric vector as string — format_mean_range","title":"Format mean and range of numeric vector as string — format_mean_range","text":"Produces string like \"0.123 [0.100 - 0.150]\" numeric vector.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/format_mean_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format mean and range of numeric vector as string — format_mean_range","text":"","code":"format_mean_range(   x,   meanx = TRUE,   min.max = TRUE,   digits = 3,   scientific = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/format_mean_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format mean and range of numeric vector as string — format_mean_range","text":"x numeric vector. meanx Logical; whether include mean value output. Defaults `TRUE`. min.max Logical; whether include minimum maximum values output. Defaults `TRUE`. digits Number digits *decimal point*. scientific Logical; whether use scientific notation.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/format_mean_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format mean and range of numeric vector as string — format_mean_range","text":"character string formatted mean, min, max values.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":null,"dir":"Reference","previous_headings":"","what":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"function calculates diploid genomes classic Nei's Gst (1987), Nei's G'st (prime), comes correction bias stems sampling limited number populations. Also calculated Jost's D, index population differentiation independent amount within-population diversity (Jost, 2008). overall pairwise Fst can estimated confidence intervals based bootstrap markers (resampling replacement). function give identical results 4th decimal tested genet.dist hierfstat Fst computed Calculate Distances GenoDive. fastest computation still GenoDive, , R solution computes confidence intervals fast. computations takes advantage tidyverse packages parallel. impact unbalanced design estimates can tested using subsample argument. Special concerns genome-wide estimate filtering bias computation, function first starts keeping polymorphic markers common populations. Keep mind filtering markers use function characteristic strategically get better genome-wide estimate. even important project involves 2 populations evolved neutral processes (e.g. genetic drift) natural selection (see vignette details).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"","code":"fst_NEI87(   data,   pop.levels = NULL,   pop.labels = NULL,   strata = NULL,   holdout.samples = NULL,   pairwise = FALSE,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   subsample = NULL,   iteration.subsample = 1,   digits = 9,   parallel.core = parallel::detectCores() - 1,   verbose = FALSE,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"data file working directory object global environment wide long (tidy) formats. import, function uses internally radiator tidy_wide. See details info. get tidy data frame ? radiator tidy_genomic_data can transform 11 genomic data formats tidy data frame (VCF, PLINK, genind, genlight, gtypes, genepop, stacks haplotype file, hierfstat, ...). can also use function filter dataset using whitelist markers, blacklist individuals genotypes. pop.levels (optional, string) refers levels factor. case, id pop. Use argument pop ordered way instead default alphabetical numerical order. e.g. pop.levels = c(\"QUE\", \"ONT\", \"ALB\") instead default pop.levels = c(\"ALB\", \"ONT\", \"QUE\"). Default: pop.levels = NULL. pop.labels (optional, string) Use argument rename/relabel pop combine pop. e.g. combine \"QUE\" \"ONT\" new pop called \"NEW\": (1) First, define levels pop pop.levels argument: pop.levels = c(\"QUE\", \"ONT\", \"ALB\"). (2) , use pop.labels argument: pop.levels = c(\"NEW\", \"NEW\", \"ALB\").#' rename \"QUE\" \"TAS\": pop.labels = c(\"TAS\", \"ONT\", \"ALB\"). Default: pop.labels = NULL. find complicated, also strata argument can thing, see . strata (optional) tab delimited file 2 columns header: INDIVIDUALS STRATA. strata file specified, strata file precedence grouping found input file (data). STRATA column can hierarchical grouping. Default: strata = NULL. holdout.samples (optional) Samples participate Fst computation (supplementary). Data frame one column INDIVIDUALS. Default: holdout.samples = NULL. pairwise (logical, optional) pairwise = TRUE, pairwise NEI87 Fst calculated populations. Default: pairwise = FALSE. ci (logical, optional) Compute bootstrapped confidence intervals. Default: ci = FALSE. iteration.ci (integer, optional) number iterations boostraps (resampling replacement markers). Default: iteration.ci = 100. quantiles.ci (double, optional) quantiles bootstrapped confidence intervals. Default: quantiles.ci = c(0.025,0.975). subsample (Integer character) subsample = 36, 36 individuals populations chosen randomly represent dataset. subsample = \"min\", minimum number individual/population found data used automatically. Default subsampling, subsample = NULL. iteration.subsample (Integer) number iterations repeat subsampling. subsample = 20 iteration.subsample = 10, 20 individuals/populations randomly chosen 10 times. Default: iteration.subsample = 1. digits (optional, integer) number decimal places used results. Default: digits = 9. parallel.core (optional) number core parallel computation pairwise Fst. selected detectCores() - 1 used default. verbose (logical, optional) verbose = TRUE chatty execution. Default: verbose = FALSE. ... parameters passed function.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"function returns list several objects. sumsample selected objects end .subsample. $subsampling.individuals: combinations individuals subsamples, $fst.markers: Nei's Gst, Nei's G'st Jost's D markers, $fst.ranked: Nei's Gst, Nei's G'st Jost's D markers ranked Nei's Gst, $fst.overall: overall Nei's Gst, Nei's G'st Jost's D markers confidence intervals. $fis.markers: fis markers, $fis.overall: mean fis overall markers confidence intervals number markers, $fst.plot: histogram overall G'st per markers, $pairwise.fst: pairwise Nei's Gst, Nei's G'st Jost's D long/tidy data frame number markers , $pairwise.fst.upper.matrix: pairwise fst prime upper triangle matrix, $pairwise.fst.full.matrix: pairwise fst prime matrix (duplicated upper lower triangle), $pairwise.fst.ci.matrix: matrix pairwise fst prime upper triangle  confidence intervals lower triangle. subsample selected $pairwise.fst.subsample.mean summary  pairwise comparisons subsample. mean calculated accross summary  statistics.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"Input data: discriminate long wide format, function radiator tidy_wide searches MARKERS LOCUS column names (TRUE = long format). data frame tab delimitted. Wide format: wide format store metadata info. wide format starts 2 id columns: INDIVIDUALS, STRATA (refers grouping individuals), remaining columns markers separate columns storing genotypes. Long/Tidy format: long format considered tidy data frame can store metadata info. (e.g. VCF see radiator tidy_genomic_data). minimum 4 columns required long format: INDIVIDUALS, STRATA, MARKERS LOCUS GENOTYPE GT. rest considered metata info. 2 genotypes formats available: 6 characters separator: e.g. 001002 111333 (heterozygote individual). 6 characters separator: e.g. 001/002 111/333 (heterozygote individual). separator can : \"/\", \":\", \"_\", \"-\", \".\". get tidy data frame ? radiator tidy_genomic_data can transform 6 genomic data formats tidy data frame.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"Negative Fst technical artifact computation (see Roesti el al. 2012) automatically replaced zero inside function. p-values ? null hypothesis testing P-values. Confidence intervals provided F-statistics enables reliable conclusions biological trends data.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"Nei M. (1987) Molecular Evolutionary Genetics. Columbia University Press Meirmans PG, Van Tienderen PH (2004) genotype genodive: two programs analysis genetic diversity asexual organisms. Molecular Ecology Notes, 4, 792-794. Roesti M, Salzburger W, Berner D. (2012) Uninformative polymorphisms bias genome scans signatures selection. BMC Evol Biol., 12:94. doi:10.1111/j.1365-294X.2012.05509.x Jost L. (2008) G(ST) relatives measure differentiation. Molecular Ecology. 17: 4015-4026.","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"Thierry Gosselin thierrygosselin@icloud.com","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_NEI87.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A fast implementation of Nei's 1987 Fst (overall and paiwise estimates) — fst_NEI87","text":"","code":"if (FALSE) { # \\dontrun{  require(assigner)  wombat.fst.pairwise <- fst_NEI87(  data = \"wombat.filtered.tidy.tsv\",  sep = \"/\",  pop.levels = c(\"ATL\", \"MLE\", \"BIS\", \"PMO\", \"SOL\", \"TAS\", \"ECU\"),  holdout.samples = NULL,  pairwise = TRUE,  ci = TRUE,  iteration.ci = 10000,  quantiles.ci = c(0.025,0.975),  parallel.core = 8,  verbose = TRUE  )  #To get the overall Fst estimate:  wombat.fst.pairwise$fst.overall  #To get the Fst plot:  wombat.fst.pairwise$fst.plots  #To get the pairwise Fst values with confidence intervals in a data frame:  wombat.fst.pairwise$pairwise.fst  #To get the pairwise fst and ci matrix in a data frame:  # rename, data frame, put rownames in column  pairwise.fst.ci.df <- data.frame(pairwise.fst.ci.matrix) %>% add_rownames(\"POP\") } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":null,"dir":"Reference","previous_headings":"","what":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"function calculates Weir Cockerham (1984) Fst diploid genomes. overall pairwise Fst can estimated confidence intervals based bootstrap markers (resampling replacement). function gives identical results 9th decimal tested genet.dist hierfstat. Using argument snprelate = TRUE compute Fst SNPRelate. implementation gives slightly upward bias values provided fastest computations know, compute confidence intervals, now. R implementation, fst_WC84 fast. computations takes advantage dplyr, tidyr, purrr, parallel SNPRelate. impact unbalanced design estimates can tested using subsample argument (see advance mode section). Special concerns genome-wide estimate filtering bias computation, function first starts keeping polymorphic markers common populations. Keep mind filtering markers use function characteristic strategically get better genome-wide estimate. even important project involves 2 populations evolved neutral processes (e.g. genetic drift) natural selection (see vignette details).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"","code":"fst_WC84(   data,   snprelate = FALSE,   strata = NULL,   pop.levels = NULL,   pairwise = FALSE,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   heatmap.fst = FALSE,   digits = 9,   filename = \"fst_WC84\",   parallel.core = parallel::detectCores() - 2,   verbose = FALSE,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"data tidy data frame object global environment tidy data frame wide long format working directory. get tidy data frame ? Look radiator tidy_genomic_data. can also use function filter dataset using whitelist markers, blacklist individuals genotypes. snprelate (optional, logical) Use SNPRelate compute Fst. fastest computation seen far! However, testing different RADseq datasets shown several upward bias SNPRelate::snpgdsFst (last version tested v.1.16.0). compared results assigner, hierfstat strataG (results available upon request). SNPRelate author given good reason belive issue fully resolved, consequently, option longer available, notice. Default: snprelate = FALSE strata (optional, data frame) tab delimited file 2 columns header: INDIVIDUALS STRATA. strata file specified, strata file precedence grouping found data file (data). STRATA column can hierarchical grouping. Default: strata = NULL. pop.levels (optional, string) refers levels factor. case, id pop. Use argument pop ordered way instead default alphabetical numerical order. e.g. pop.levels = c(\"QUE\", \"ONT\", \"ALB\") instead default pop.levels = c(\"ALB\", \"ONT\", \"QUE\"). Default: pop.levels = NULL. pairwise (optional, logical) pairwise = TRUE, pairwise WC84 Fst calculated populations. Default: pairwise = FALSE. ci (optional, logical) Compute bootstrapped confidence intervals. Default: ci = FALSE. iteration.ci (optional, integer) number iterations boostraps (resampling replacement markers). Default: iteration.ci = 100. quantiles.ci (optional, double) quantiles bootstrapped confidence intervals. Default: quantiles.ci = c(0.025,0.975). heatmap.fst (logical) Generate heatmap Fst values lower matrix CI upper matrix. heatmap can also generated separately Fst analysis using separate function: heatmap_fst. Default: heatmap.fst = FALSE. digits (optional, integer) number decimal places used results. Default: digits = 9. filename (optional, character) Give filename prefix output directory, trigger saving results. Default: filename = \"fst_WC84\". parallel.core (optional, integer) number core parallel computation pairwise Fst. See also advance mode section . Default: parallel.core = parallel::detectCores() - 1. verbose (optional, logical) verbose = TRUE chatty execution. Default: verbose = FALSE. ... parameters passed function.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"function returns list several objects. sumsample selected objects end .subsample. $subsampling.individuals: combinations individuals subsamples, $sigma.loc: variance components per locus,       (lsiga: among populations,       lsigb: among individuals within populations,       lsigw: within individuals) $fst.markers: fst markers, $fst.ranked: fst ranked, $fst.overall: mean fst overall markers number markers $fis.markers: fis markers, $fis.overall: mean fis overall markers number markers, $fst.plot: histogram overall Fst per markers, $pairwise.fst: pairwise fst long/tidy data frame number markers , $pairwise.fst.upper.matrix: pairwise fst upper triangle matrix, $pairwise.fst.full.matrix: pairwise fst matrix (duplicated upper lower triangle), $pairwise.fst.ci.matrix: matrix pairwise fst upper triangle  confidence intervals lower triangle. subsample selected $pairwise.fst.subsample.mean summary  pairwise comparisons subsample. mean calculated accross summary  statistics.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"Negative Fst technical artifact computation (see Roesti el al. 2012) automatically replaced zero inside function. p-values ? null hypothesis testing P-values rarely ever appropriate model population genomics, despite popularity molecular ecologists interested population differentiation. \"important scientific question real magnitude differentiation, smallness P value\" -Lou Jost Confidence intervals provided F-statistics enables reliable conclusions biological trends data. confidence interval describes statistical uncertainty F-statistics estimate. confidence interval include zero, null hypothesis rejected. confidence interval include zero, null hypothesis can rejected can also appreciation real magnitude statistical differentiation whether large small.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"advance-mode","dir":"Reference","previous_headings":"","what":"Advance mode","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"dots-dots-dots ... allows pass several arguments fine-tuning function: filter.monomorphic (logical, optional) default monomorphic markers present dataset removed (stay way...). Default: filter.monomorphic = TRUE. holdout.samples (optional, data frame) Samples participate Fst computation (supplementary). Data frame one column INDIVIDUALS. argument used inside assignment analysis. Default: holdout.samples = NULL. subsample (Integer character) subsample = 36, 36 individuals populations chosen randomly represent dataset. subsample = \"min\", minimum number individual/population found data used automatically. Default subsampling, subsample = NULL. iteration.subsample (Integer) number iterations repeat subsampling. subsample = 20 iteration.subsample = 10, 20 individuals/populations randomly chosen 10 times. Default: iteration.subsample = 1. calibrate.alleles (logical) Un-calibrated alleles can bias estimate default function expect REF/ALT alleles calibrated. Using calibrate.alleles = TRUE, can take bit time. Default: calibrate.alleles = FALSE.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"Excoffier L, Smouse PE, Quattro JM. Analysis molecular variance inferred metric distances among DNA haplotypes: application human mitochondrial DNA restriction data. Genetics. 1992;131: 479-491. Jost L, D vs. GST: Response Heller Siegismund (2009) Ryman Leimar (2009). Molecular Ecology. 2009; 18:10 2088-2091. https://doi.org/10.1111/j.1365-294x.2009.04186.x Meirmans PG, Van Tienderen PH (2004) genotype genodive: two programs analysis genetic diversity asexual organisms. Molecular Ecology Notes, 4, 792-794. Michalakis Y, Excoffier L. generic estimation population subdivision using distances alleles special reference microsatellite loci. Genetics. 1996;142: 1061-1064. Weir BS, Cockerham CC (1984) Estimating F-Statistics Analysis Population Structure. Evolution, 38, 1358-1370. Roesti M, Salzburger W, Berner D. (2012) Uninformative polymorphisms bias genome scans signatures selection. BMC Evol Biol., 12:94. doi:10.1111/j.1365-294X.2012.05509.x Zheng X, Levine D, Shen J, Gogarten SM, Laurie C, Weir BS. high-performance computing toolset relatedness principal component analysis SNP data. Bioinformatics. 2012;28: 3326-3328. doi:10.1093/bioinformatics/bts606","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"Thierry Gosselin thierrygosselin@icloud.com","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_WC84.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A fast implementation of Weir and Cockerham (1984) Fst/Theta (overall and paiwise estimates) — fst_WC84","text":"","code":"if (FALSE) { # \\dontrun{ wombat.fst.pairwise <- fst_WC84(     data = \"wombat.filtered.tidy.tsv\",     pop.levels = c(\"ATL\", \"MLE\", \"BIS\", \"PMO\", \"SOL\", \"TAS\", \"ECU\"),     pairwise = TRUE,     ci = TRUE,     iteration.ci = 10000,     quantiles.ci = c(0.025,0.975),     parallel.core = 8,     verbose = TRUE,     filename = \"wombat\",     heatmap.fst = TRUE )  # To get the overall Fst estimate: wombat.fst.pairwise$fst.overall  # To get the Fst plot: wombat.fst.pairwise$fst.plot  #To get the pairwise Fst values with confidence intervals in a data frame: df <- wombat.fst.pairwise$pairwise.fst } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_nei_subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"fst_nei_subsample — fst_nei_subsample","title":"fst_nei_subsample — fst_nei_subsample","text":"Function link subsampling","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_nei_subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fst_nei_subsample — fst_nei_subsample","text":"","code":"fst_nei_subsample(   x,   input,   pop.levels = NULL,   pop.labels = NULL,   strata = NULL,   holdout.samples = NULL,   pairwise = FALSE,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   digits = 9,   subsample = NULL,   parallel.core = parallel::detectCores() - 1,   verbose = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"fst_stats — fst_stats","title":"fst_stats — fst_stats","text":"Generate useful stats","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fst_stats — fst_stats","text":"","code":"fst_stats(x, l, digits = 9L, m = NULL, s = NULL, iteration.subsample = NULL)"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"fst_subsample — fst_subsample","title":"fst_subsample — fst_subsample","text":"Function link subsampling","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fst_subsample — fst_subsample","text":"","code":"fst_subsample(   x,   data,   snprelate = FALSE,   strata = NULL,   holdout.samples = NULL,   pairwise = FALSE,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   digits = 9,   subsample = NULL,   path.folder = NULL,   parallel.core = parallel::detectCores() - 1,   verbose = FALSE,   forking = FALSE,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_write.html","id":null,"dir":"Reference","previous_headings":"","what":"fst_write — fst_write","title":"fst_write — fst_write","text":"Write fst results working directory path","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/fst_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fst_write — fst_write","text":"","code":"fst_write(x, list.sub, path.folder)"},{"path":"https://thierrygosselin.github.io/assigner/reference/generate_holdhout.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_holdhout — generate_holdhout","title":"generate_holdhout — generate_holdhout","text":"Generate holdhout samples based thl iterations.list","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/generate_holdhout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_holdhout — generate_holdhout","text":"","code":"generate_holdhout(   thl,   strata,   iteration.method,   random.seed = NULL,   path.folder = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/generate_subsamples.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_subsamples — generate_subsamples","title":"generate_subsamples — generate_subsamples","text":"generate_subsamples","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/generate_subsamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_subsamples — generate_subsamples","text":"","code":"generate_subsamples(   subsample,   iteration.subsample,   strata,   random.seed = NULL,   path.folder = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"file path to be used in a call to gsi_sim. — gsi_sim_binary","title":"file path to be used in a call to gsi_sim. — gsi_sim_binary","text":"version checks make sure throws error suggestion get .","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"file path to be used in a call to gsi_sim. — gsi_sim_binary","text":"","code":"gsi_sim_binary()"},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_binary_path.html","id":null,"dir":"Reference","previous_headings":"","what":"return the path where gsi_sim should be in the R system paths — gsi_sim_binary_path","title":"return the path where gsi_sim should be in the R system paths — gsi_sim_binary_path","text":"return path gsi_sim R system paths","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_binary_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return the path where gsi_sim should be in the R system paths — gsi_sim_binary_path","text":"","code":"gsi_sim_binary_path()"},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"return TRUE if gsi_sim exists where it should be — gsi_sim_exists","title":"return TRUE if gsi_sim exists where it should be — gsi_sim_exists","text":"return TRUE gsi_sim exists ","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return TRUE if gsi_sim exists where it should be — gsi_sim_exists","text":"","code":"gsi_sim_exists()"},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_is_executable.html","id":null,"dir":"Reference","previous_headings":"","what":"return TRUE if gsi_sim is executable — gsi_sim_is_executable","title":"return TRUE if gsi_sim is executable — gsi_sim_is_executable","text":"return TRUE gsi_sim executable","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/gsi_sim_is_executable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return TRUE if gsi_sim is executable — gsi_sim_is_executable","text":"","code":"gsi_sim_is_executable()"},{"path":"https://thierrygosselin.github.io/assigner/reference/heatmap_fst.html","id":null,"dir":"Reference","previous_headings":"","what":"heatmap_fst — heatmap_fst","title":"heatmap_fst — heatmap_fst","text":"Function generate Heatmap Fst CI values","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/heatmap_fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"heatmap_fst — heatmap_fst","text":"","code":"heatmap_fst(   pairwise.fst = NULL,   pairwise.fst.full.matrix = NULL,   pairwise.fst.ci.matrix = NULL,   pop.levels = NULL,   n.s = TRUE,   digits = 5,   color.low = \"blue\",   color.mid = \"yellow\",   color.high = \"red\",   text.size = 4,   plot.size = NULL,   path.folder = NULL,   filename = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/heatmap_fst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"heatmap_fst — heatmap_fst","text":"pairwise.fst (object path). Tibble info generated fst_WC84. used, pairwise.fst.full.matrix pairwise.fst.ci.matrix required. pairwise.fst.full.matrix (object path). pairwise.fst.ci.matrix (object path). pop.levels (optional, character, string) supplied, order set colnames full fst matrix. Default: pop.levels = NULL. n.s (optional, logical) * Fst value significant (0 lower bound CI). Default: n.s = TRUE. digits (optional, integer) number digits showed heatmap. Default: digits = 5. color.low (optional, character) Color lower bound. Default: color.low = \"blue\". color.mid (optional, character) Mid color value. Default: color.mid = \"yellow\". color.high (optional, character) Color higher bound. Default: color.high = \"red\". text.size (optional, integer) Size values. Default: text.size = 2. plot.size (optional, integer) default size number strata * 2 cm. Default: plot.size = NULL. path.folder (optional, character) Default: path.folder = NULL. Default use working directory. filename (optional, character) Name plot write. Default: filename = NULL. default, plot written disk.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and Standardize Genomic Data — import_data","title":"Import and Standardize Genomic Data — import_data","text":"Import format genomic data tidy format compatible downstream analyses radiator. function detects input data type (tidy data frame, GDS file, SeqVarGDSClass) performs appropriate transformation.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and Standardize Genomic Data — import_data","text":"","code":"import_data(data, calibrate.alleles = FALSE, verbose = FALSE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/import_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and Standardize Genomic Data — import_data","text":"data Genomic dataset. Can tibble/data frame wide format, GDS file path, SeqVarGDSClass object. calibrate.alleles Logical. TRUE, force recalibration REF/ALT allele genotypes using calibrate_alleles. Default: FALSE. verbose Logical. Show detailed messages import. Default: FALSE.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and Standardize Genomic Data — import_data","text":"tidy data frame (tibble) standardized genotype format required metadata (e.g., GT column).","code":""},{"path":[]},{"path":"https://thierrygosselin.github.io/assigner/reference/import_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and Standardize Genomic Data — import_data","text":"","code":"if (FALSE) { # \\dontrun{ # From tidy data tidy_data <- import_data(data = my_tibble)  # From GDS file tidy_data <- import_data(data = \"myfile.gds\")  # With calibration tidy_data <- import_data(data = my_tibble, calibrate.alleles = TRUE) } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Import individual's assignment results of different subsample folder. — import_subsamples","title":"Import individual's assignment results of different subsample folder. — import_subsamples","text":"function import individual's assignment results different subsample folder R.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import individual's assignment results of different subsample folder. — import_subsamples","text":"","code":"import_subsamples(dir.path, imputations = FALSE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import individual's assignment results of different subsample folder. — import_subsamples","text":"dir.path path directory containing subsample folders. imputations (logical) data imputed . Default: imputations = FALSE","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import individual's assignment results of different subsample folder. — import_subsamples","text":"data frame individual's assignment, iterations subsample.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import individual's assignment results of different subsample folder. — import_subsamples","text":"Thierry Gosselin thierrygosselin@icloud.com","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import individual's assignment results of different subsample folder. — import_subsamples","text":"","code":"if (FALSE) { # \\dontrun{ subsamples.data <- import_subsamples( dir.path = \"assignment_analysis_method_random_imputations_rf_populations\", imputations = TRUE ) } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples_fst.html","id":null,"dir":"Reference","previous_headings":"","what":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","title":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","text":"function import fst ranking subsample runs inside assignment folder.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples_fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","text":"","code":"import_subsamples_fst(dir.path)"},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples_fst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","text":"dir.path path directory containing subsample folders.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples_fst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","text":"data frame Fst ranking.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples_fst.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","text":"Thierry Gosselin thierrygosselin@icloud.com","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/import_subsamples_fst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import the fst ranking from all the subsample runs inside an assignment folder. — import_subsamples_fst","text":"","code":"if (FALSE) { # \\dontrun{ subsamples.data <- import_subsamples_fst( dir.path = \"assignment_analysis_method_ranked_no_imputations_20160425@2321\" ) } # }"},{"path":"https://thierrygosselin.github.io/assigner/reference/install_gsi_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"downloads gsi_sim that is appropriate for the operating system — install_gsi_sim","title":"downloads gsi_sim that is appropriate for the operating system — install_gsi_sim","text":"system Mac, Windows, function download precompiled binary GitHub.  cases, fromSource == TRUE, function attempt download source code compile program source install .","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/install_gsi_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"downloads gsi_sim that is appropriate for the operating system — install_gsi_sim","text":"","code":"install_gsi_sim(   commit = \"080f462c8eff035fa3e9f2fdce26c3ac013e208a\",   fromSource = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/install_gsi_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"downloads gsi_sim that is appropriate for the operating system — install_gsi_sim","text":"commit full SHA-1 hash GitHub get binary source fromSource TRUE, download source, even binary available. FALSE, download precompiled binary, available.  binary available, attempt download source.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/install_gsi_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"downloads gsi_sim that is appropriate for the operating system — install_gsi_sim","text":"function fails, can just compile gsi_sim going GITHUB_URL compiling naming executable gsi_sim putting location specified function gsi_sim_binary_path.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/marker_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"marker_selection — marker_selection","title":"marker_selection — marker_selection","text":"Random selection marker function + iteration.method","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/marker_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"marker_selection — marker_selection","text":"","code":"marker_selection(   iteration.method,   m = NULL,   random.seed = NULL,   unique.markers = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/match_markers_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"match_markers_meta — match_markers_meta","title":"match_markers_meta — match_markers_meta","text":"Integrate markers meta info back data","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/match_markers_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match_markers_meta — match_markers_meta","text":"","code":"match_markers_meta(x, markers.meta)"},{"path":"https://thierrygosselin.github.io/assigner/reference/message_func_call.html","id":null,"dir":"Reference","previous_headings":"","what":"message_func_call — message_func_call","title":"message_func_call — message_func_call","text":"Message function call","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/message_func_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"message_func_call — message_func_call","text":"","code":"message_func_call(n, v, verbose = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/minimize_args_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimize arguments list for parallel execution — minimize_args_list","title":"Minimize arguments list for parallel execution — minimize_args_list","text":"Removes unused large objects list arguments. Designed reduce memory overhead passing arguments parallel workers.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/minimize_args_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimize arguments list for parallel execution — minimize_args_list","text":"","code":"minimize_args_list(args, keep, verbose = TRUE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/minimize_args_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimize arguments list for parallel execution — minimize_args_list","text":"args named list arguments (e.g., args..fst) keep character vector argument names keep verbose Show dropped (default: TRUE)","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/minimize_args_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimize arguments list for parallel execution — minimize_args_list","text":"slimmed-list relevant arguments","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/n.html","id":null,"dir":"Reference","previous_headings":"","what":"The number of observations in the current group. — n","title":"The number of observations in the current group. — n","text":"Check dplyr","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The number of observations in the current group. — n","text":"","code":"n()"},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_fst.html","id":null,"dir":"Reference","previous_headings":"","what":"pairwise_fst — pairwise_fst","title":"pairwise_fst — pairwise_fst","text":"main function","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pairwise_fst — pairwise_fst","text":"","code":"pairwise_fst(   x,   pop.pairwise = NULL,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   digits = 9,   path.folder = NULL,   ... )"},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_fst_nei.html","id":null,"dir":"Reference","previous_headings":"","what":"pairwise_fst_nei — pairwise_fst_nei","title":"pairwise_fst_nei — pairwise_fst_nei","text":"pairwise Fst function nei","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_fst_nei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pairwise_fst_nei — pairwise_fst_nei","text":"","code":"pairwise_fst_nei(   list.pair,   pop.pairwise = NULL,   data.genotyped = NULL,   ci = FALSE,   iteration.ci = 100,   quantiles.ci = c(0.025, 0.975),   digits = 9 )"},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_matrix_utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Matrix Utilities for Pairwise Distance Data — make_upper_matrix","title":"Internal Matrix Utilities for Pairwise Distance Data — make_upper_matrix","text":"internal utility functions convert long-format pairwise population data symmetric matrices, typically used visualising pairwise FST genetic distance estimates.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_matrix_utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Matrix Utilities for Pairwise Distance Data — make_upper_matrix","text":"","code":"make_upper_matrix(data, value.col, fill.value = \"\")  make_full_symmetric_matrix(upper.matrix, diagonal.value = \"0\")"},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_matrix_utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Matrix Utilities for Pairwise Distance Data — make_upper_matrix","text":"data data frame tibble `POP1`, `POP2`, value column. value.col unquoted column use matrix values. fill.value value fill missing cells (default: `\"\"`). upper.matrix square matrix (upper triangle filled). diagonal.value value assign diagonal (default: `\"0\"`).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_matrix_utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Matrix Utilities for Pairwise Distance Data — make_upper_matrix","text":"matrix. first function returns upper-triangular matrix, second full symmetric matrix diagonal.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/pairwise_matrix_utils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal Matrix Utilities for Pairwise Distance Data — make_upper_matrix","text":"`make_upper_matrix()` converts long-form pairwise data wide upper-triangular matrix. `make_full_symmetric_matrix()` takes upper matrix completes symmetric form.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/parallel_core_opt.html","id":null,"dir":"Reference","previous_headings":"","what":"parallel_core_opt — parallel_core_opt","title":"parallel_core_opt — parallel_core_opt","text":"Optimization parallel core argument radiator","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/parallel_core_opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parallel_core_opt — parallel_core_opt","text":"","code":"parallel_core_opt(parallel.core = NULL, max.core = NULL)"},{"path":"https://thierrygosselin.github.io/assigner/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward-pipe operator — %>%","title":"Forward-pipe operator — %>%","text":"magrittr forward-pipe operator","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward-pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_assignment.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_assignment — plot_assignment","title":"plot_assignment — plot_assignment","text":"plot_assignment","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_assignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_assignment — plot_assignment","text":"","code":"plot_assignment(x, path.folder = NULL, full.y.range = FALSE)"},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_dlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","title":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","text":"function generate figure similar Paetkau's et al. (2004) Fig 6.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_dlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","text":"","code":"plot_dlr(   data,   pop.pairwise,   dlr = NULL,   x.dlr = NULL,   y.dlr = NULL,   fst = NULL,   x.fst = NULL,   y.fst = NULL,   plot.dlr = TRUE,   plot.width = NULL,   plot.height = NULL,   plot.dpi = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_dlr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","text":"data assigment object dlr output. pop.pairwise List pairwise populations generate Dlr plot. dlr (optional) Character string Dlr value. x.dlr (optional) Position x-axis Dlr value. y.dlr (optional) Position y-axis Dlr value. fst (optional) Character string Fst value. x.fst (optional) Position x-axis Fst value. y.fst (optional) Position y-axis Fst value. plot.dlr (optional) default  write plot working directory. plot.width (optional) Width cm figure. plot.height (optional) height cm figure. plot.dpi (optional) Number dpi figure (e.g 600).","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_dlr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","text":"list assignment table assignment plot.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_dlr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","text":"Paetkau D, Slade R, Burden M, Estoup (2004) Genetic assignment methods direct, real-time estimation migration rate: simulation-based exploration accuracy power. Molecular Ecology, 13, 55-65. Meirmans PG, Van Tienderen PH (2004) genotype genodive: two programs analysis genetic diversity asexual organisms. Molecular Ecology Notes, 4, 792-794.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_dlr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assignment plot of genotype likelihood (Dlr). — plot_dlr","text":"Thierry Gosselin thierrygosselin@icloud.com","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_fst_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of FST values — plot_fst_distribution","title":"Plot the distribution of FST values — plot_fst_distribution","text":"Creates histogram FST values tibble data frame.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_fst_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of FST values — plot_fst_distribution","text":"","code":"plot_fst_distribution(data, binwidth = 0.01)"},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_fst_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of FST values — plot_fst_distribution","text":"data tibble data frame containing numeric `FST` column. binwidth numeric value specifying histogram bin width. Default `0.01`.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/plot_fst_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of FST values — plot_fst_distribution","text":"`ggplot2` object showing histogram FST values.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/prep_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare stratification data — prep_strata","title":"Prepare stratification data — prep_strata","text":"Read join strata information main dataset, standardising population levels.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/prep_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare stratification data — prep_strata","text":"","code":"prep_strata(   data,   strata,   pop.levels = NULL,   blacklist.id = NULL,   verbose = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/prep_strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare stratification data — prep_strata","text":"data tibble containing genetic data. strata Path strata file tibble containing strata information. pop.levels (optional) character vector specifying population levels use factor levels `STRATA`. Default: NULL. blacklist.id (optional) vector individual IDs blacklist. Default: NULL. verbose (logical) Show progress messages. Default: FALSE.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/prep_strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare stratification data — prep_strata","text":"tibble updated `STRATA` column joined strata info.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/rad_long.html","id":null,"dir":"Reference","previous_headings":"","what":"rad_long — rad_long","title":"rad_long — rad_long","text":"Gather, melt pivot_longer","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/rad_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rad_long — rad_long","text":"","code":"rad_long(   x,   cols = NULL,   measure_vars = NULL,   names_to = NULL,   values_to = NULL,   variable_factor = TRUE,   keep_rownames = FALSE,   tidy = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/rad_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"rad_wide — rad_wide","title":"rad_wide — rad_wide","text":"Spread, dcast pivot_wider","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/rad_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rad_wide — rad_wide","text":"","code":"rad_wide(   x,   formula = NULL,   names_from = NULL,   values_from = NULL,   sep = \"_\",   fun_aggregate = NULL,   values_fill = NULL,   tidy = FALSE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/subsampling_data.html","id":null,"dir":"Reference","previous_headings":"","what":"subsampling data — subsampling_data","title":"subsampling data — subsampling_data","text":"subsampling data","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/subsampling_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subsampling data — subsampling_data","text":"","code":"subsampling_data(   iteration.subsample = 1,   strata = NULL,   subsample = NULL,   random.seed = NULL )"},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numeric using formatC and dynamic arguments — utils_formatC","title":"Format numeric using formatC and dynamic arguments — utils_formatC","text":"Format numeric using formatC dynamic arguments","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numeric using formatC and dynamic arguments — utils_formatC","text":"","code":"utils_formatC(x, fmt.args)"},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numeric using formatC and dynamic arguments — utils_formatC","text":"x numeric scalar. fmt.args named list arguments pass base::formatC.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format numeric using formatC and dynamic arguments — utils_formatC","text":"character string formatted formatC.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a numeric vector using formatC and flexible arguments — utils_formatC_vec","title":"Format a numeric vector using formatC and flexible arguments — utils_formatC_vec","text":"Format numeric vector using formatC flexible arguments","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a numeric vector using formatC and flexible arguments — utils_formatC_vec","text":"","code":"utils_formatC_vec(x, fmt.args)"},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a numeric vector using formatC and flexible arguments — utils_formatC_vec","text":"x numeric vector. fmt.args named list arguments pass base::formatC.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/utils_formatC_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a numeric vector using formatC and flexible arguments — utils_formatC_vec","text":"character vector formatted values.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/write_temp_data_fst.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Temporary Data to Parquet — write_temp_data_fst","title":"Write Temporary Data to Parquet — write_temp_data_fst","text":"function filters input data based subsample information, removes missing genotypes, optionally removes holdout individuals. writes resulting data Parquet file.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/write_temp_data_fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Temporary Data to Parquet — write_temp_data_fst","text":"","code":"write_temp_data_fst(   subsample.list = NULL,   data,   holdout.samples = NULL,   strata = NULL,   file.date = NULL,   path.folder = NULL,   verbose = TRUE )"},{"path":"https://thierrygosselin.github.io/assigner/reference/write_temp_data_fst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Temporary Data to Parquet — write_temp_data_fst","text":"subsample.list data frame tibble containing information subsamples. include column `SUBSAMPLE` used identify subsample. data data frame tibble containing dataset filtered based subsample holdout samples. holdout.samples vector IDs individual identifiers excluded dataset (optional). strata data frame tibble containing information strata, used identify filter holdout samples. file.date character string representing date (timestamp) included filename Parquet file. path.folder folder path resulting Parquet file saved. verbose logical indicating whether display progress messages. Defaults `TRUE`.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/write_temp_data_fst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Temporary Data to Parquet — write_temp_data_fst","text":"character string representing path saved Parquet file.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/write_temp_data_fst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Temporary Data to Parquet — write_temp_data_fst","text":"function filters `data` `ID_SEQ` values found `subsample.list`. Missing genotypes (denoted `GT == \"000000\"`) removed. `holdout.samples` provided, individuals removed `data` based matching IDs `strata` data frame. filtered data written Parquet file specified filename path.","code":""},{"path":"https://thierrygosselin.github.io/assigner/reference/write_temp_data_fst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Temporary Data to Parquet — write_temp_data_fst","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage write_temp_data_fst(   subsample.list = subsample_info,   data = my_data ) } # }"},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-070-2025-07-01","dir":"Changelog","previous_headings":"","what":"assigner 0.7.0 2025-07-01","title":"assigner 0.7.0 2025-07-01","text":"assigner::fst_WC84: work faster better reporting","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-060-2024-11-06","dir":"Changelog","previous_headings":"","what":"assigner 0.6.0 2024-11-06","title":"assigner 0.6.0 2024-11-06","text":"refresh new R version","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-059-2023-03-15","dir":"Changelog","previous_headings":"","what":"assigner 0.5.9 2023-03-15","title":"assigner 0.5.9 2023-03-15","text":"work assigner::fst_WC84","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-058-2020-10-20","dir":"Changelog","previous_headings":"","what":"assigner 0.5.8 2020-10-20","title":"assigner 0.5.8 2020-10-20","text":"Version bump updates numerous packages: tidyr, readr, using future, carrier. GitHub actions run R-CMD-check 3 OS.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-057-2020-01-21","dir":"Changelog","previous_headings":"","what":"assigner 0.5.7 2020-01-21","title":"assigner 0.5.7 2020-01-21","text":"Bug fix heatmap: digits fixed 5 pop.levels = NULL, heatmap mixed . Thanks @siberianhigh highlighting bug.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-056-2019-05-01","dir":"Changelog","previous_headings":"","what":"assigner 0.5.6 2019-05-01","title":"assigner 0.5.6 2019-05-01","text":"included 2 simulated datasets updated documentation assignment_ngs vignette get started assigner, finally! really starting smell like CRAN release work travis CI work pkgdown","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-055-2019-04-25","dir":"Changelog","previous_headings":"","what":"assigner 0.5.5 2019-04-25","title":"assigner 0.5.5 2019-04-25","text":"cosmetic changes package: using pkgdown updated documentation assignment_ngs","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-054-2019-03-12","dir":"Changelog","previous_headings":"","what":"assigner 0.5.4 2019-03-12","title":"assigner 0.5.4 2019-03-12","text":"fst_WC84: work faster continue integrate assigner SeqArray GDS object/file","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-053-2019-02-25","dir":"Changelog","previous_headings":"","what":"assigner 0.5.3 2019-02-25","title":"assigner 0.5.3 2019-02-25","text":"fst_WC84: work radiator v.1.0 continue updating fucntions work latest radiator release work toward releasing official v.1.0 assigner. Imputation module removed assigner now lives exclusively package grur","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-052-2018-07-09","dir":"Changelog","previous_headings":"","what":"assigner 0.5.2 2018-07-09","title":"assigner 0.5.2 2018-07-09","text":"working make assigner work correctly ggplot2 v.3.0.0 assigner ready R 3.5.1 “Feather Spray” released 2018/07/05","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-051-2018-06-21","dir":"Changelog","previous_headings":"","what":"assigner 0.5.1 2018-06-21","title":"assigner 0.5.1 2018-06-21","text":"bug assignment_mixture generated purrr::df replaced recently purrr:dfr. Changed DESCRIPTION field accordingly.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-050-2017-12-12","dir":"Changelog","previous_headings":"","what":"assigner 0.5.0 2017-12-12","title":"assigner 0.5.0 2017-12-12","text":"subsample argument assignment_ngs assignment_mixture can now automatically detect smallest sample size data’s grouping. can use subsample = \"min\" let function decide (sure).","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-049-2017-08-18","dir":"Changelog","previous_headings":"","what":"assigner 0.4.9 2017-08-18","title":"assigner 0.4.9 2017-08-18","text":"migration assigner using stackr -> radiator","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-048-2017-08-15","dir":"Changelog","previous_headings":"","what":"assigner 0.4.8 2017-08-15","title":"assigner 0.4.8 2017-08-15","text":"restored progress bar using parallel computing installing new dev version pbmcapply package.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-047-2017-08-15","dir":"Changelog","previous_headings":"","what":"assigner 0.4.7 2017-08-15","title":"assigner 0.4.7 2017-08-15","text":"bug fix: removed progress bar using parallel computing. temporary, waiting fix pbmcapply package.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-046-2017-06-17","dir":"Changelog","previous_headings":"","what":"assigner 0.4.6 2017-06-17","title":"assigner 0.4.6 2017-06-17","text":"assigner works dplyr v.0.7.0","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-045-2017-04-25","dir":"Changelog","previous_headings":"","what":"assigner 0.4.5 2017-04-25","title":"assigner 0.4.5 2017-04-25","text":"dlr: simplified arguments, faster function now creates Dlr plots dependencies package SNPRelate removed bugs Fst calculation resolved.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-044-2017-04-12","dir":"Changelog","previous_headings":"","what":"assigner 0.4.4 2017-04-12","title":"assigner 0.4.4 2017-04-12","text":"bug fix assignment_ngs introduced last commit suppose fix. Problem introduced stackr::change_pop_names.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-043-2017-04-02","dir":"Changelog","previous_headings":"","what":"assigner 0.4.3 2017-04-02","title":"assigner 0.4.3 2017-04-02","text":"’s now official, assigner logo faster fst_NEI87 unbalanced design impact estimates can tested subsample iteration.subsample fst_NEI87 fst_WC84","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-042","dir":"Changelog","previous_headings":"","what":"assigner 0.4.2","title":"assigner 0.4.2","text":"SNPRelate bias issue resolved option unavailable better use pbmcapply Windows imputations reworked buggy next update. codes completely re-written arguments change (better).","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-041","dir":"Changelog","previous_headings":"","what":"assigner 0.4.1","title":"assigner 0.4.1","text":"debug code work parallel Windows code cleaning prep CRAN","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-040","dir":"Changelog","previous_headings":"","what":"assigner 0.4.0","title":"assigner 0.4.0","text":"assignment_ngs assignment_mixture code cleaning prep CRAN make easier debug.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-039","dir":"Changelog","previous_headings":"","what":"assigner 0.3.9","title":"assigner 0.3.9","text":"’m pleased announce assigner now works parallel Windows bug fix introduce last commit write_gsi_sim file created properly internal module.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-038","dir":"Changelog","previous_headings":"","what":"assigner 0.3.8","title":"assigner 0.3.8","text":"assigner::fst_WC84 can now use SNPRelate compute Fst. confidence intervals implemented, yet. speed increase left speechless, dataset 30K snp computed less 15 sec!","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-037","dir":"Changelog","previous_headings":"","what":"assigner 0.3.7","title":"assigner 0.3.7","text":"assigner::fst_WC84 40% faster!","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-036","dir":"Changelog","previous_headings":"","what":"assigner 0.3.6","title":"assigner 0.3.6","text":"bug fix assignment_ngs imputations, imputation module recognise REF/ALT alleles necessary usefull assignment analysis. *enhancement assignment_ngs assignment_mixture marker.number include \"\" iteration.method set automatically 1 conducting assignment markers. Iterations point useless waist time. random seed number now stored appropriate files. assignment_mixture: assignment.analysis = \"gsi_sim unknown/mixture samples compared baseline populations using common markers pair. Now, tables include number markers used. summary provides mean number markers. number change time randomness used.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-035","dir":"Changelog","previous_headings":"","what":"assigner 0.3.5","title":"assigner 0.3.5","text":"bug fix population recognise properly","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-034","dir":"Changelog","previous_headings":"","what":"assigner 0.3.4","title":"assigner 0.3.4","text":"fst_NEI87: fast function can compute: overall pairwise Nei’s (1987) fst f’st (prime). Bootstrap resampling markers avalaible build Confidence Intervals. estimates available data frame matrix upper diagonal filled Fst values lower diagonal filled confidence intervals. Jost’s D also given ;)","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-033","dir":"Changelog","previous_headings":"","what":"assigner 0.3.3","title":"assigner 0.3.3","text":"fst_WC84: bug fix, function properly configured multi-allelic markers (e.g. microsatellite, haplotype format STACKS). Thanks Craig McDougall catching .","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-032","dir":"Changelog","previous_headings":"","what":"assigner 0.3.2","title":"assigner 0.3.2","text":"assignment_mixture: added check throw error pop.levels != pop.id strata","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-031","dir":"Changelog","previous_headings":"","what":"assigner 0.3.1","title":"assigner 0.3.1","text":"assignment_mixture: * updated latest modules stackr. * simplified identification mixture unknown samples. See doc.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-030","dir":"Changelog","previous_headings":"","what":"assigner 0.3.0","title":"assigner 0.3.0","text":"updated vignettes major bug fix involved dplyr new version (0.5.0) mostly use dplyr::distinct","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-029","dir":"Changelog","previous_headings":"","what":"assigner 0.2.9","title":"assigner 0.2.9","text":"updated vignettes bug fix fst_WC84 bug fix assinger -> devtools -> github -> travis, [page helped] (http://itsalocke.com/using-travis-make-sure-use-github-pat/)","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-028","dir":"Changelog","previous_headings":"","what":"assigner 0.2.8","title":"assigner 0.2.8","text":"changing lines tidyr::spread tidyr::gather data.table::dcast.data.table data.table::melt.data.table make code faster, forgot split genotype alleles gsi_sim. build error Travis fixed soon. affect package “experience”” way.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-027","dir":"Changelog","previous_headings":"","what":"assigner 0.2.7","title":"assigner 0.2.7","text":"need update [stackr] (https://github.com/thierrygosselin/stackr) v.0.2.7 appreciate new version assigner. updated assignment_ngs separate stackr modules simplify function. new data file available assignment_ngs: genepop genind object. assignment_ngs now accept vcf input file! .e. ’s longer limited stacks vcf. new arguments assignment_ngs. assignment using dapc can now use optimized alpha score adegenet.dapc.opt == \"optim..score\" cross-validation adegenet.dapc.opt == \"xval\". useful fine tuning trade-power discrimination -fitting (stability group membership probabilities). Cross validation adegenet.dapc.opt == \"xval\" doesn’t work missing data, ’s available imputed data (.e. imputation.method == \"rf\" \"max\"). non imputed data default: optimized alpha-score used (adegenet.dapc.opt == \"optim..score\"). using adegenet.dapc.opt == \"xval\", 2 new arguments available: adegenet.n.rep (2) adegenet.training. See documentation details. removed arguments assignment_ngs. Removed pop.id.start pop.id.end arguments confusing people. used arguments, now recycled new function individuals2strata [stackr] (https://github.com/thierrygosselin/stackr). strata file created function can used strata argument assignment_ngs. 2 modified arguments assignment_ngs: (1) gsi_sim.filename now filename; didn’t use imputation argument, replace imputation.method = FALSE imputation.method = NULL leave argument missing. simplified sections codes assignment_ngs dealt strata, pop.levels pop.labels. new function: write_gsi_sim. Write gsi_sim file data frame (wide long/tidy). Used internally [assigner] (https://github.com/thierrygosselin/assigner) might interest users.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-026","dir":"Changelog","previous_headings":"","what":"assigner 0.2.6","title":"assigner 0.2.6","text":"Added NEWS.md file track changes package. fst_WC84 now separate fast function can compute: overall pairwise Weir Cockerham 1984 Theta/Fst. Bootstrap resampling markers avalaible build Confidence Intervals (Louis Bernatchez students;). estimates available data frame matrix upper diagonal filled Fst values lower diagonal filled confidence intervals.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-025","dir":"Changelog","previous_headings":"","what":"assigner 0.2.5","title":"assigner 0.2.5","text":"cleaner code strata section bug fix restricted assignment_ngs + assignment.analysis = \"adegenet\" + sampling.method = \"ranked\". line beginning gsi_sim code section deleted makig assignment adegenet go chunk code causing 100% assignment! (assignment.analysis = “gsi_sim”) {code} prevent problem…","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-024","dir":"Changelog","previous_headings":"","what":"assigner 0.2.4","title":"assigner 0.2.4","text":"bug fixed using adegenet introduced v.0.2.3 introducing new function import_subsamples_fst import fst ranking results subsample runs inside assignment folder.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-023","dir":"Changelog","previous_headings":"","what":"assigner 0.2.3","title":"assigner 0.2.3","text":"bug fixed compilation results section pop.id.start end used.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-021","dir":"Changelog","previous_headings":"","what":"assigner 0.2.1","title":"assigner 0.2.1","text":"updated function assignment_mixture sampling.method = \"ranked\" assignment.analysis = \"adegenet\".","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-020","dir":"Changelog","previous_headings":"","what":"assigner 0.2.0","title":"assigner 0.2.0","text":"new function: assignment_mixture mixture analysis.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-019","dir":"Changelog","previous_headings":"","what":"assigner 0.1.9","title":"assigner 0.1.9","text":"Simplified gsi_sim install","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-018","dir":"Changelog","previous_headings":"","what":"assigner 0.1.8","title":"assigner 0.1.8","text":"can now opt [gsi_sim] (https://github.com/eriqande/gsi_sim) [adegenet] (https://github.com/thibautjombart/adegenet), R package developed Thibaul Jombart, conduct assignment analysis","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-017","dir":"Changelog","previous_headings":"","what":"assigner 0.1.7","title":"assigner 0.1.7","text":"New input file: Re-introduced haplotype data frame file stacks. Argument name change: imputations now impute.method. New argument: impute 2 options: impute = \"genotype\" impute = \"allele\".","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-016","dir":"Changelog","previous_headings":"","what":"assigner 0.1.6","title":"assigner 0.1.6","text":"Input file argument now data covers three types files function can use: VCF file, PLINK tped/tfam data frame genotypes file. Huge number markers (> 50 000 markers) can now imported PLINK tped/tfam format. first 2 columns tfam file used strata argument, unless new one provided. Columns 1, 3 4 tped discarded. remaining columns correspond genotype format 01/04 = 01, C = 02, G = 03 T = 04. /T format, use PLINK bash convert. Use [VCFTOOLS] (http://vcftools.sourceforge.net/) --plink-tped convert large VCF file. .ped file conversion .tped use [PLINK] (http://pngu.mgh.harvard.edu/~purcell/plink/) --recode transpose.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-015","dir":"Changelog","previous_headings":"","what":"assigner 0.1.5","title":"assigner 0.1.5","text":"bug fix method = \"random\" imputation","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-014","dir":"Changelog","previous_headings":"","what":"assigner 0.1.4","title":"assigner 0.1.4","text":"Changed function name, GBS_assignment assignment_ngs. Stands assignment next-generation sequencing data. New argument df.file don’t VCF file. See documentation. New argument strata don’t population id metadata info individual name. See documentation.","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-013","dir":"Changelog","previous_headings":"","what":"assigner 0.1.3","title":"assigner 0.1.3","text":"Changed arguments THL thl snp.LD snp.ld follow convention. iterations.subsample changed iteration.subsample. iterations changed iteration.method avoid confusion iteration arguments. Removed baseline mixture arguments function GBS_assignment. options re-introduce later separate function. Using marker.number higher number markers data set causing problems. arise using arguments removed markers dataset (e.g. snp.ld, common.markers, maf filters).","code":""},{"path":"https://thierrygosselin.github.io/assigner/news/index.html","id":"assigner-012","dir":"Changelog","previous_headings":"","what":"assigner 0.1.2","title":"assigner 0.1.2","text":"new version update gsi_sim new install instruction Linux Mac. re-installing assigner package, follow instruction re-install new [gsi_sim] (https://github.com/eriqande/gsi_sim). delete old binary ‘gsisim’ /usr/local/bin folder following Terminal command: sudo rm /usr/local/bin/gsisim","code":""}]
